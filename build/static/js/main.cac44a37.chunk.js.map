{"version":3,"sources":["store/apis/base.js","store/apis/service.js","store/actions/Auth.js","store/types.js","components/Auth/Login/index.jsx","components/Auth/Register/index.jsx","components/Auth/index.jsx","store/actions/Transaction.js","store/mock.js","components/Rent/Option.jsx","components/Rent/index.jsx","components/Transaction.jsx","app.jsx","store/reducers/ProfileReducer.js","store/reducers/TransactionReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["BASE","api","axios","create","baseURL","headers","Accept","API","a","apiToken","localStorage","getItem","console","log","AUTH_TOKEN","defaults","RegisterApi","userDetails","AUTH_API","post","LoginApi","loginDetails","editProfile","id","profileDetails","patch","getAllTransactions","email","get","clearAuthErrorAction","dispatch","type","Login","props","state","password","this","pros","authError","Alert","warning","className","Input","size","placeholder","onChange","e","setState","value","defaultValue","disabled","authLoading","Button","width","height","color","onClick","length","test","LoginAction","appearance","ripple","style","borderRadius","borderWidth","fontVariant","Component","mapDispatchToProps","payload","login","data","user","err","response","msg","error","connect","isLoading","errorMsg","Register","full_name","phone","RegisterAction","regDetails","register","Auth","auth_state","postionTitle","dotenv","config","GetAllTransactions","transactions","periods","months","require","CurrencyFormat","Option","lg","userData","accommodation_status","rent_amount","income","stage","payment_duration","label","handlePayment","bind","target","name","MakePayment","Number","first_payment","parseInt","toFixed","ProfileUpdate","changeThird","position","border","fontSize","options","displayType","thousandSeparator","prefix","changeSecond","profileData","callback","Profile","ProfileId","_id","paymentData","named","paystack","PaystackPop","newTransaction","key","process","PAYSTACK_TEST_KEY","amount","firstname","split","lastname","onSuccess","onCancel","Rent","postion","maxValue","strokeWidth","styles","buildStyles","rotation","textSize","pathTransitionDuration","pathColor","trailColor","backgroundColor","Column","Table","HeaderCell","Cell","Transaction","onRowClick","rowData","dataKey","App","show_transactions","isAuthenticated","display","flexDirection","justifyContent","LogoutAction","initialState","token","persistConfig","storage","whitelist","combine","combineReducers","action","setItem","removeItem","persistReducer","configureStore","store","createStore","rootRuducer","compose","applyMiddleware","thunk","persistor","persistStore","stor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cac44a37.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst BASE = `https://kwaba.onrender.com`;\r\n// const BASE = `http://localhost:8001`;\r\n\r\n\r\nexport const AUTH_TOKEN = \"benny-token\";\r\nconst api = axios.create({\r\n  baseURL: `${BASE}/v1/api`,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"multipart/form-data\",\r\n  },\r\n});\r\n\r\nexport const API = async () => {\r\n  try {\r\n    const apiToken = localStorage.getItem(AUTH_TOKEN);\r\n    console.log({ AUTH_TOKEN, apiToken });\r\n    if (apiToken) {\r\n      api.defaults.headers[AUTH_TOKEN] = `${apiToken}`;\r\n    }\r\n    return api;\r\n  } catch (error) {\r\n    return api;\r\n  }\r\n};\r\n\r\nexport default BASE;\r\n","import { API } from \"./base\";\r\n\r\n//Auth Api\r\nexport const RegisterApi = async (userDetails) => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.post(`/profile/signUp`, userDetails);\r\n};\r\nexport const LoginApi = async (loginDetails) => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.post(`/profile/login`, loginDetails);\r\n};\r\n\r\nexport const editProfile = async (id, profileDetails) => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.patch(`/profile/updateProfile/${id}`, profileDetails);\r\n};\r\n\r\nexport const editProfileInstructor = async (profileDetails) => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.patch(`/account/instructor`, profileDetails);\r\n};\r\n\r\nexport const RefreshApi = async (loginDetails) => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.post(`/auth/refreshToken`, loginDetails);\r\n};\r\n\r\n//  Transactions\r\nexport const getAllTransactions = async (email) => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.get(`/transactions/${email}`);\r\n};\r\n\r\n","import {\r\n  RegisterApi,\r\n  LoginApi,\r\n  editProfile,\r\n} from \"../apis/service\";\r\nimport {\r\n  AUTHENTICATED,\r\n  AUTH_LOADING,\r\n  LOGOUT,\r\n  AUTH_ERROR,\r\n  CLEAR_AUTH_ERROR,\r\n  PROFILE_CHANGED,\r\n} from \"../types\";\r\n\r\nexport const clearAuthErrorAction = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_AUTH_ERROR });\r\n};\r\n\r\nexport const RegisterAction = (regDetails) => async (dispatch) => {\r\n  dispatch({\r\n    type: AUTH_LOADING,\r\n    payload: true,\r\n  });\r\n  try {\r\n    let register = await RegisterApi(regDetails);\r\n    console.log({ register: register.data });\r\n    dispatch({\r\n      type: AUTHENTICATED,\r\n      payload: register.data,\r\n      user: register.data.data,\r\n    });\r\n    console.log({\r\n      register: register.data,\r\n    });\r\n  } catch (error) {\r\n    let err\r\n    console.log({ err: error.response });\r\n    if (error.response) {\r\n      err = error.response.data.msg;\r\n      console.log({ error });\r\n    } else {\r\n      err = \"Something went wrong. Try Again\";\r\n    }\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\nexport const LoginAction = (loginDetails) => async (dispatch) => {\r\n  console.log({ loginDetails });\r\n\r\n  dispatch({\r\n    type: AUTH_LOADING,\r\n    payload: true,\r\n  });\r\n  try {\r\n    let login = await LoginApi(loginDetails);\r\n    console.log({ login: login.data });\r\n    dispatch({\r\n      type: AUTHENTICATED,\r\n      payload: login.data,\r\n      user: login.data.user,\r\n    });\r\n\r\n   \r\n  } catch (error) {\r\n    let err\r\n    console.log({ err: error.response });\r\n    if (error.response) {\r\n      err = error.response.data.msg;\r\n      console.log({ error });\r\n    } else {\r\n      err = \"Something went wrong. Try Again\";\r\n    }\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\nexport const ProfileUpdate =\r\n  (profileData, callback) => async (dispatch, state) => {\r\n    console.log({ profileData });\r\n    try {\r\n      await dispatch({ type: AUTH_LOADING });\r\n      let Profile = await state().user;\r\n      console.log({ Profile: Profile });\r\n      let ProfileId = Profile.user._id;\r\n      let user = await editProfile(ProfileId, profileData);\r\n\r\n      user = await user.data.data;\r\n      // user = { ...Profile, user };\r\n\r\n      console.log({ user });\r\n      await dispatch({\r\n        type: PROFILE_CHANGED,\r\n        payload: user,\r\n      });\r\n      callback();\r\n    } catch (error) {\r\n      let err\r\n      console.log({ err: error.response });\r\n      console.log({ err: error });\r\n      if (error.response) {\r\n        err = error.response.data.msg;\r\n        console.log({ error });\r\n      } else {\r\n        err = \"Something went wrong. Try Again\";\r\n      }\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const LogoutAction = () => async (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","// AUTH_TYPES\r\nexport const CLEAR_AUTH_ERROR = \"CLEAR_AUTH_ERROR\";\r\nexport const PROFILE_CHANGED = \"PROFILE_CHANGED\";\r\nexport const AUTHENTICATED = \"AUTHENTICATED\";\r\nexport const AUTH_LOADING = \"AUTH_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const MADE_PAYMENT = \"MADE_PAYMENT\";\r\nexport const GET_ALL_TRANSACTIONS = \"GET_ALL_TRANSACTIONS\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Input, Alert } from \"rsuite\";\r\nimport \"rsuite/dist/styles/rsuite-default.css\";\r\nimport {\r\n  LoginAction,\r\n  clearAuthErrorAction,\r\n} from \"./../../../store/actions/Auth\";\r\nimport Spinner from \"react-loader-spinner\";\r\n\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.clearAuthErrorAction();\r\n  }\r\n  componentDidUpdate(pros) {\r\n    if (this.props.authError !== pros.authError)\r\n      if (this.props.authError) {\r\n        Alert.warning(this.props.authError);\r\n        this.props.clearAuthErrorAction();\r\n      }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"rent_opion for_input\">\r\n          <div className=\"Op_head\">Email</div>\r\n          <Input\r\n            type={\"email\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                email: e,\r\n              });\r\n            }}\r\n            id={\"email\"}\r\n            value={this.state.email}\r\n            defaultValue={this.state.email}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"rent_opion for_input\">\r\n          <div className=\"Op_head\">Password</div>\r\n          <Input\r\n            type={\"password\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                password: e,\r\n              });\r\n            }}\r\n            id={\"email\"}\r\n            value={this.state.password}\r\n            defaultValue={this.state.password}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n        {this.props.authLoading ? (\r\n          <Button\r\n            disabled\r\n            className={`balm w-100 heart text-center mt-2 butas bg-success`}\r\n          >\r\n            <Spinner\r\n              width=\"9.5\"\r\n              className=\"mx-auto\"\r\n              height=\"9.5\"\r\n              color=\"white\"\r\n              type=\"ThreeDots\"\r\n            />\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            className={`balm text-center mt-2 butas bg-success`}\r\n            onClick={() => {\r\n              let { email, password } = this.state;\r\n\r\n              if (email && password) {\r\n                if (password.length < 6) {\r\n                  Alert.warning(\r\n                    \"Password show be greater than 6 charaters\",\r\n                    5000\r\n                  );\r\n                } else if (EmailTest(email) === false) {\r\n                  Alert.warning(\"Enter a valid email address.\", 5000);\r\n                } else {\r\n                  this.props.LoginAction({\r\n                    email,\r\n                    password,\r\n                  });\r\n                }\r\n              } else {\r\n                Alert.warning(\"Please all fields.\", 5000);\r\n              }\r\n            }}\r\n            appearance=\"subtle\"\r\n            ripple={true}\r\n            style={{ width: \"100%\", borderRadius: \"6px\", borderWidth: 2 }}\r\n          >\r\n            <span\r\n              style={{ fontVariant: \"small-caps\" }}\r\n              className=\"text-white op_button_next small\"\r\n            >\r\n              Login\r\n            </span>\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport function EmailTest(d) {\r\n  let email =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return email.test(d);\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  authLoading: state.user.isLoading,\r\n  authError: state.user.errorMsg,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  LoginAction,\r\n  clearAuthErrorAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Input, Alert } from \"rsuite\";\r\nimport \"rsuite/dist/styles/rsuite-default.css\";\r\nimport {\r\n  RegisterAction,\r\n  clearAuthErrorAction,\r\n} from \"./../../../store/actions/Auth\";\r\nimport Spinner from \"react-loader-spinner\";\r\n\r\nexport class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      full_name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.clearAuthErrorAction();\r\n  }\r\n  componentDidUpdate(pros) {\r\n    if (this.props.authError !== pros.authError)\r\n      if (this.props.authError) {\r\n        Alert.warning(this.props.authError);\r\n        this.props.clearAuthErrorAction();\r\n      }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"rent_opion for_input \">\r\n          <div className=\"Op_head\">Full Name</div>\r\n          <Input\r\n            type={\"email\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter full name\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                full_name: e,\r\n              });\r\n            }}\r\n            id={\"full_name\"}\r\n            value={this.state.full_name}\r\n            defaultValue={this.state.full_name}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n        <div className=\"rent_opion for_input\">\r\n          <div className=\"Op_head\">Email</div>\r\n          <Input\r\n            type={\"email\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                email: e,\r\n              });\r\n            }}\r\n            id={\"email\"}\r\n            value={this.state.email}\r\n            defaultValue={this.state.email}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"rent_opion for_input\">\r\n          <div className=\"Op_head\">Phone Number</div>\r\n          <Input\r\n            type={\"number\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter phone number\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                phone: e,\r\n              });\r\n            }}\r\n            id={\"email\"}\r\n            value={this.state.phone}\r\n            defaultValue={this.state.phone}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n        <div className=\"rent_opion for_input\">\r\n          <div className=\"Op_head\">Password</div>\r\n          <Input\r\n            type={\"password\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                password: e,\r\n              });\r\n            }}\r\n            id={\"email\"}\r\n            value={this.state.password}\r\n            defaultValue={this.state.password}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n        {this.props.authLoading ? (\r\n          <Button\r\n            disabled\r\n            className={`balm w-100 heart text-center mt-2 butas bg-success`}\r\n          >\r\n            <Spinner\r\n              width=\"9.5\"\r\n              className=\"mx-auto\"\r\n              height=\"9.5\"\r\n              color=\"white\"\r\n              type=\"ThreeDots\"\r\n            />\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            className={`balm text-center mt-2 butas bg-success`}\r\n            onClick={() => {\r\n              let { full_name, email, phone, password } = this.state;\r\n\r\n              if (full_name && email && phone && password) {\r\n                if (password.length < 6) {\r\n                  Alert.warning(\r\n                    \"Password show be greater than 6 charaters\",\r\n                    5000\r\n                  );\r\n                } else if (phone.length < 11 || phone.length > 11) {\r\n                  Alert.warning(\"Phone number should be 11 digits.\", 5000);\r\n                } else if (EmailTest(email) === false) {\r\n                  Alert.warning(\"Enter a valid email address.\", 5000);\r\n                } else {\r\n                  this.props.RegisterAction({\r\n                    full_name,\r\n                    email,\r\n                    phone,\r\n                    password,\r\n                  });\r\n                }\r\n              } else {\r\n                Alert.warning(\"Please all fields.\", 5000);\r\n              }\r\n            }}\r\n            appearance=\"subtle\"\r\n            ripple={true}\r\n            style={{ width: \"100%\", borderRadius: \"6px\", borderWidth: 2 }}\r\n          >\r\n            <span\r\n              style={{ fontVariant: \"small-caps\" }}\r\n              className=\"text-white op_button_next small\"\r\n            >\r\n              Register\r\n            </span>\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport function EmailTest(d) {\r\n  let email =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return email.test(d);\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  authLoading: state.user.isLoading,\r\n  authError: state.user.errorMsg,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  RegisterAction,\r\n  clearAuthErrorAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\n\r\nexport class Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { auth_state: false };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\" rent\">\r\n        <div className=\"rent_stages  \">\r\n          <div className=\"rent_title\">{this.state.postionTitle}</div>\r\n          <div className=\"rent_ratio foen heart flex ml-auto\">\r\n            <div className=\"rent_content\">\r\n              <div className=\"my_rent_auth\">\r\n                <div className=\"auth_title\">SignUp</div>\r\n                <div className=\"auth_container\">\r\n                  {this.state.auth_state === false ? <Register /> : <Login />}\r\n                </div>\r\n                <div\r\n                  className=\"switch_auth text-center\"\r\n                  onClick={() => {\r\n                    this.setState({ auth_state: !this.state.auth_state });\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"py-3 pnt\"\r\n                    onClick={() => {\r\n                      this.setState({ auth_state: !this.state.auth_state });\r\n                    }}\r\n                  >\r\n                    {this.state.auth_state === false ? \"Are you registered ? Login\" : \"New to Kwaba? Register now\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import { MADE_PAYMENT, GET_ALL_TRANSACTIONS, AUTH_ERROR, AUTH_LOADING, CLEAR_AUTH_ERROR } from \"./../types\"\r\nimport PaystackPop from \"@paystack/inline-js\"\r\nimport dotenv from \"dotenv\"\r\nimport { getAllTransactions } from \"../apis/service\"\r\ndotenv.config()\r\n\r\nexport const MakePayment =\r\n  (paymentData, callback) => async (dispatch, state) => {\r\n    console.log({ paymentData });\r\n    try {\r\n      await dispatch({ type: AUTH_LOADING });\r\n      let Profile = await state().user;\r\n      let email = Profile.user.email;\r\n      let name = Profile.user.full_name;\r\n      console.log({ named: name })\r\n      // let phone = Profile.user.phone;\r\n\r\n      let paystack = new PaystackPop()\r\n      await paystack.newTransaction({\r\n        key: process.env.PAYSTACK_TEST_KEY,\r\n        amount: paymentData.first_payment * 100,\r\n        email,\r\n        firstname: name.split(\" \")[0],\r\n        lastname: name.split(\" \")[1] ? name.split(\" \")[1] : name.split(\" \")[0],\r\n\r\n        async onSuccess() {\r\n          await callback();\r\n        },\r\n\r\n        async onCancel() {\r\n          dispatch({\r\n            type: AUTH_ERROR,\r\n            payload: \"AN ERROR OCCURED\",\r\n          });\r\n        }\r\n\r\n      })\r\n    } catch (error) {\r\n      let err\r\n      console.log({ err: error });\r\n      if (error.response) {\r\n        err = error.response.data.msg;\r\n        // console.log({ error });\r\n      } else {\r\n        err = \"Something went wrong. Try Again\";\r\n      }\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\nexport const GetAllTransactions = (email) => async (dispatch, state) => {\r\n  // await dispatch({ type: AUTH_LOADING });\r\n  try {\r\n    let transactions = await getAllTransactions(email);\r\n    console.log({ transactions: transactions.data.data });\r\n\r\n    transactions = await transactions.data.data;\r\n\r\n    dispatch({\r\n      type: GET_ALL_TRANSACTIONS,\r\n      payload: transactions,\r\n    });\r\n    // await dispatch({ type: CLEAR_AUTH_ERROR });\r\n  } catch (error) {\r\n    let err\r\n    console.log({ err: error.response });\r\n    console.log({ error });\r\n    if (error.response) {\r\n      err = error.response.data.error;\r\n    } else {\r\n      err = \"Something went wrong. Try Again\";\r\n    }\r\n    dispatch({\r\n      type: GET_ALL_TRANSACTIONS,\r\n      payload: [],\r\n    });\r\n  }\r\n  // await dispatch({ type: CLEAR_AUTH_ERROR });\r\n};\r\n","export const periods = [\r\n  \"1st\",\r\n  \"2nd\",\r\n  \"3rd\",\r\n  \"4th\",\r\n  \"5th\",\r\n  \"6th\",\r\n  \"7th\",\r\n  \"8th\",\r\n  \"9th\",\r\n  \"10th\",\r\n  \"11th\",\r\n  \"12th\"\r\n]","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Input, Alert } from \"rsuite\";\r\nimport Select from \"react-select\";\r\nimport \"rsuite/dist/styles/rsuite-default.css\";\r\n\r\nimport {\r\n    ProfileUpdate,\r\n    clearAuthErrorAction,\r\n} from \"./../../store/actions/Auth\";\r\n\r\nimport {\r\n    MakePayment,\r\n    GetAllTransactions,\r\n} from \"./../../store/actions/Transaction\";\r\n\r\nimport Spinner from \"react-loader-spinner\";\r\nimport { periods } from \"../../store/mock\";\r\n\r\nlet months = require(\"./months.json\");\r\n\r\nlet CurrencyFormat = require(\"react-currency-format\");\r\n\r\nexport class Option extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log({ lg: this.props.userData });\r\n        this.state = {\r\n            accommodation_status: \"\",\r\n            rent_amount: \"\",\r\n            income: \"\",\r\n            stage: 1,\r\n            ...this.props.userData,\r\n            payment_duration: {\r\n                label: this.props.userData\r\n                    ? `${this.props.userData.payment_duration? this.props.userData.payment_duration : 1 } Month`\r\n                    : \"1 Month\",\r\n                value: this.props.userData\r\n                    ? `${this.props.userData.payment_duration? this.props.userData.payment_duration : 1 } Months`\r\n                    : \"1 Months\",\r\n            },\r\n        };\r\n        this.handlePayment = this.handlePayment.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.clearAuthErrorAction();\r\n        this.props.GetAllTransactions(this.props.userData.email);\r\n    }\r\n    componentDidUpdate(pros) {\r\n        if (this.props.authError !== pros.authError)\r\n            if (this.props.authError) {\r\n                Alert.warning(this.props.authError);\r\n                this.props.clearAuthErrorAction();\r\n            }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    handlePayment() {\r\n        let { accommodation_status, income, rent_amount, payment_duration } =\r\n            this.state;\r\n        if (accommodation_status && income && rent_amount && payment_duration) {\r\n            this.props.MakePayment(\r\n                {\r\n                    accommodation_status,\r\n                    income,\r\n                    rent_amount: Number(this.state.rent_amount) * 0.02,\r\n                    first_payment: Number(\r\n                        Number(\r\n                            this.state.rent_amount /\r\n                                parseInt(this.state.payment_duration.value)\r\n                        ) +\r\n                            Number(this.state.rent_amount) * 0.02\r\n                    ).toFixed(2),\r\n                    payment_duration: parseInt(payment_duration.value),\r\n                },\r\n\r\n                () =>\r\n                    this.props.ProfileUpdate(\r\n                        {\r\n                            accommodation_status,\r\n                            income,\r\n                            rent_amount,\r\n                            payment_duration: parseInt(payment_duration.value),\r\n                        },\r\n                        () => {\r\n                            this.setState({\r\n                                stage: \"3\",\r\n                            });\r\n                            this.props.changeThird();\r\n                        }\r\n                    )\r\n            );\r\n        } else {\r\n            Alert.warning(\"Please all fields.\", 5000);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"headout opacy\">\r\n                    {this.state.stage === 1 &&\r\n                    !this.props.userData.payment_duration ? (\r\n                        <div className=\"'opacy\">\r\n                            <div className=\"rent_option \">\r\n                                <div className=\"Op_head\">\r\n                                    What's your accommodation status?\r\n                                </div>\r\n                                <Button\r\n                                    appearance=\"subtle\"\r\n                                    className={`z-depth-0 text-center mt-2 butas  ${\r\n                                        this.state.accommodation_status ===\r\n                                            \"Looking to renew my rent\" &&\r\n                                        \"bubuta\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            accommodation_status:\r\n                                                \"Looking to renew my rent\",\r\n                                        });\r\n                                    }}\r\n                                    ripple={true}\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        borderRadius: \"6px\",\r\n                                        borderWidth: 2,\r\n                                    }}\r\n                                >\r\n                                    <span className=\"op_button \">\r\n                                        Looking to renew my rent\r\n                                    </span>\r\n                                </Button>\r\n                                <Button\r\n                                    className={`z-depth-0 text-center mt-2 butas  ${\r\n                                        this.state.accommodation_status ===\r\n                                            \"Want to pay for a new place\" &&\r\n                                        \"bubuta\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            accommodation_status:\r\n                                                \"Want to pay for a new place\",\r\n                                        });\r\n                                    }}\r\n                                    appearance=\"subtle\"\r\n                                    ripple={true}\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        borderRadius: \"6px\",\r\n                                        borderWidth: 2,\r\n                                    }}\r\n                                >\r\n                                    <span className=\"op_button \">\r\n                                        Want to pay for a new place\r\n                                    </span>\r\n                                </Button>\r\n                                <Button\r\n                                    appearance=\"subtle\"\r\n                                    className={`z-depth-0 text-center mt-2 butas mb-3  ${\r\n                                        this.state.accommodation_status ===\r\n                                            \"I'm still searching\" && \"bubuta\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            accommodation_status:\r\n                                                \"I'm still searching\",\r\n                                        });\r\n                                    }}\r\n                                    ripple={true}\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        borderRadius: \"6px\",\r\n                                        borderWidth: 2,\r\n                                    }}\r\n                                >\r\n                                    <span className=\"op_button \">\r\n                                        I'm still searching\r\n                                    </span>\r\n                                </Button>\r\n                            </div>\r\n\r\n                            <div className=\"rent_opion for_input \">\r\n                                <div className=\"Op_head\">\r\n                                    How much is your rent request amount?\r\n                                </div>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    size=\"md\"\r\n                                    className=\"optional_input\"\r\n                                    placeholder=\"Amount\"\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            rent_amount: e,\r\n                                        });\r\n                                    }}\r\n                                    id={\"rent_amount\"}\r\n                                    value={this.state.rent_amount}\r\n                                    defaultValue={this.state.rent_amount}\r\n                                />\r\n                            </div>\r\n                            <div className=\"rent_opion for_input\">\r\n                                <div className=\"Op_head\">\r\n                                    How much did you earn monthly ?\r\n                                </div>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    size=\"md\"\r\n                                    className=\"optional_input\"\r\n                                    placeholder=\"Amount\"\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            income: e,\r\n                                        });\r\n                                    }}\r\n                                    id={\"income\"}\r\n                                    value={this.state.income}\r\n                                    defaultValue={this.state.income}\r\n                                />\r\n                            </div>\r\n                            <div className=\"rent_opion for_input\">\r\n                                <div className=\"Op_head\">\r\n                                    Choose a monthly plan ?\r\n                                </div>\r\n                            </div>\r\n                            <Select\r\n                                className=\"optional\"\r\n                                options={months}\r\n                                placeholder=\"Choose plan\"\r\n                                onChange={(e) => {\r\n                                    console.log({ e });\r\n                                    this.setState({\r\n                                        payment_duration: e,\r\n                                    });\r\n                                }}\r\n                                name={\"payment_duration\"}\r\n                                value={this.state.payment_duration}\r\n                                defaultValue={this.state.payment_duration}\r\n                                style={{\r\n                                    border: \"1px solid\",\r\n                                    fontSize: \"13px\",\r\n                                }}\r\n                            />\r\n\r\n                            <Button\r\n                                className={`balm text-center mt-4 butas bg-success`}\r\n                                onClick={() => {\r\n                                    let {\r\n                                        accommodation_status,\r\n                                        income,\r\n                                        rent_amount,\r\n                                        payment_duration,\r\n                                    } = this.state;\r\n                                    console.log({\r\n                                        accommodation_status,\r\n                                        income,\r\n                                        rent_amount,\r\n                                        payment_duration,\r\n                                    });\r\n                                    if (\r\n                                        accommodation_status &&\r\n                                        income &&\r\n                                        rent_amount &&\r\n                                        payment_duration\r\n                                    ) {\r\n                                        this.setState({\r\n                                            stage: \"2\",\r\n                                        });\r\n                                        this.props.changeSecond();\r\n                                    } else {\r\n                                        Alert.warning(\r\n                                            \"Please all fields.\",\r\n                                            5000\r\n                                        );\r\n                                    }\r\n                                }}\r\n                                appearance=\"subtle\"\r\n                                ripple={true}\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    borderRadius: \"6px\",\r\n                                    borderWidth: 2,\r\n                                }}\r\n                            >\r\n                                <span\r\n                                    style={{ fontVariant: \"small-caps\" }}\r\n                                    className=\"text-white op_button_next small\"\r\n                                >\r\n                                    Next\r\n                                </span>\r\n                            </Button>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            {this.props.position !== 3 && (\r\n                                <div className=\"opacy\">\r\n                                    <div>\r\n                                        <div className=\"rent_opion for_input \">\r\n                                            <div className=\"Op_head\">\r\n                                                Rent request amount\r\n                                            </div>\r\n                                            <Input\r\n                                                size=\"md\"\r\n                                                className=\"optional_input z-depth-1\"\r\n                                                placeholder=\"Amount\"\r\n                                                type={\"number\"}\r\n                                                onChange={(e) => {\r\n                                                    this.setState({\r\n                                                        rent_amount: e,\r\n                                                    });\r\n                                                }}\r\n                                                id={\"rent_amount\"}\r\n                                                value={this.state.rent_amount}\r\n                                                defaultValue={\r\n                                                    this.state.rent_amount\r\n                                                }\r\n                                                disabled={\r\n                                                    this.props.userData\r\n                                                        .payment_duration\r\n                                                        ? true\r\n                                                        : false\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"mt-4\" />\r\n\r\n                                        <div className=\"rent_opion for_input mt-3\">\r\n                                            <div className=\"Op_head\">\r\n                                                Monthly payment plan\r\n                                            </div>\r\n                                        </div>\r\n                                        <Select\r\n                                            className=\"optional\"\r\n                                            style={{\r\n                                                border: \"1px solid\",\r\n                                                fontSize: \"13px\",\r\n                                            }}\r\n                                            disabled={true}\r\n                                            options={months}\r\n                                            placeholder=\"Choose plan\"\r\n                                            onChange={(e) => {\r\n                                                console.log({ e });\r\n                                                if (!this.props.userData) {\r\n                                                    this.setState({\r\n                                                        payment_duration: e,\r\n                                                    });\r\n                                                }\r\n                                            }}\r\n                                            name={\"payment_duration\"}\r\n                                            value={this.state.payment_duration}\r\n                                            defaultValue={\r\n                                                this.state.payment_duration\r\n                                            }\r\n                                        />\r\n                                        <div className=\"mt-4\" />\r\n                                        <div className=\"rent_opion for_input mt-3\">\r\n                                            <div className=\"Op_head\">\r\n                                                Payment option\r\n                                            </div>\r\n\r\n                                            <div className=\"the_options border\">\r\n                                                <div className=\"the_options_1 border-bottom flex heart\">\r\n                                                    <div className=\"pre_title\">\r\n                                                        Pre-approved amount:\r\n                                                    </div>\r\n                                                    <div className=\"pre_amount ml-auto\">\r\n                                                        <CurrencyFormat\r\n                                                            value={\r\n                                                                this.state\r\n                                                                    .rent_amount\r\n                                                            }\r\n                                                            displayType={\"text\"}\r\n                                                            thousandSeparator={\r\n                                                                true\r\n                                                            }\r\n                                                            prefix={\"₦\"}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"the_options_1 border-bottom flex heart\">\r\n                                                    <div className=\"pre_title\">\r\n                                                        Monthly payment:\r\n                                                    </div>\r\n                                                    <div className=\"pre_amount ml-auto\">\r\n                                                        <CurrencyFormat\r\n                                                            value={Number(\r\n                                                                Number(\r\n                                                                    this.state\r\n                                                                        .rent_amount /\r\n                                                                        parseInt(\r\n                                                                            this\r\n                                                                                .state\r\n                                                                                .payment_duration\r\n                                                                                .value\r\n                                                                        )\r\n                                                                ) +\r\n                                                                    Number(\r\n                                                                        this\r\n                                                                            .state\r\n                                                                            .rent_amount\r\n                                                                    ) *\r\n                                                                        0.02\r\n                                                            ).toFixed(2)}\r\n                                                            displayType={\"text\"}\r\n                                                            thousandSeparator={\r\n                                                                true\r\n                                                            }\r\n                                                            prefix={\"₦\"}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"the_options_1  flex heart\">\r\n                                                    <div className=\"pre_title\">\r\n                                                        Tenor:\r\n                                                    </div>\r\n                                                    <div className=\"pre_amount ml-auto\">\r\n                                                        {\r\n                                                            this.state\r\n                                                                .payment_duration\r\n                                                                .value\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {this.props.authLoading ? (\r\n                                            <Button\r\n                                                disabled\r\n                                                className={`balm w-100 heart text-center mt-2 butas bg-success`}\r\n                                            >\r\n                                                <Spinner\r\n                                                    width=\"24\"\r\n                                                    className=\"mx-auto\"\r\n                                                    height=\"24\"\r\n                                                    color=\"white\"\r\n                                                    type=\"ThreeDots\"\r\n                                                />\r\n                                            </Button>\r\n                                        ) : (\r\n                                            <>\r\n                                                {this.props.transactions &&\r\n                                                this.props.transactions.length <\r\n                                                    parseInt(\r\n                                                        this.state\r\n                                                            .payment_duration\r\n                                                            .value\r\n                                                    ) ? (\r\n                                                    <Button\r\n                                                        className={`balm text-center mt-4 butas saa bg-success`}\r\n                                                        onClick={\r\n                                                            this.handlePayment\r\n                                                        }\r\n                                                        appearance=\"subtle\"\r\n                                                        ripple={true}\r\n                                                        style={{\r\n                                                            width: \"100%\",\r\n                                                            borderRadius: \"6px\",\r\n                                                            borderWidth: 2,\r\n                                                        }}\r\n                                                    >\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontVariant:\r\n                                                                    \"small-caps\",\r\n                                                            }}\r\n                                                            className=\"text-white op_button_next small\"\r\n                                                        >\r\n                                                            Make{\" \"}\r\n                                                            {\r\n                                                                periods[\r\n                                                                    this.props\r\n                                                                        .transactions\r\n                                                                        .length\r\n                                                                ]\r\n                                                            }{\" \"}\r\n                                                            Month Payment\r\n                                                        </span>\r\n                                                    </Button>\r\n                                                ) : (\r\n                                                    <Button\r\n                                                        className={`balm text-center mt-4 butas  bg-white`}\r\n                                                        appearance=\"subtle\"\r\n                                                        ripple={true}\r\n                                                        style={{\r\n                                                            width: \"100%\",\r\n                                                            borderRadius: \"6px\",\r\n                                                            borderWidth: 2,\r\n                                                            color: \"purple !important\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontVariant:\r\n                                                                    \"small-caps\",\r\n                                                            }}\r\n                                                            className=\" op_button_next capitalized small\"\r\n                                                        >\r\n                                                            Your{\" \"}\r\n                                                            {parseInt(\r\n                                                                this.state\r\n                                                                    .payment_duration\r\n                                                                    .value\r\n                                                            )}{\" \"}\r\n                                                            Months Payment is\r\n                                                            Completed\r\n                                                        </span>\r\n                                                    </Button>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userData: state.user.user,\r\n    authLoading: state.user.isLoading,\r\n    authError: state.user.errorMsg,\r\n    transactions: state.transactions.transactions,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    GetAllTransactions,\r\n    ProfileUpdate,\r\n    MakePayment,\r\n    clearAuthErrorAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Option);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Option from \"./Option\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nexport class Rent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postion: 1,\r\n            postionTitle: \"Payment Option\",\r\n        };\r\n        this.changeSecond = this.changeSecond.bind(this);\r\n        this.changeThird = this.changeThird.bind(this);\r\n    }\r\n    changeSecond() {\r\n        this.setState({ postion: 2, postionTitle: \"Payment \" });\r\n    }\r\n    changeThird() {\r\n        this.setState({ postion: 3, postionTitle: \"Application Completed\" });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\" rent\">\r\n                <div className=\"rent_stages  flex\">\r\n                    <div className=\"rent_title\">{this.state.postionTitle}</div>\r\n                    <div className=\"rent_ratio  heart flex ml-auto\">\r\n                        <div className=\"ratio_num\">\r\n                            {this.state.postion} of 3\r\n                        </div>\r\n                        <div className=\"ratio_circle  p-1 ml-auto\">\r\n                            <div style={{ width: 38, height: 38 }}>\r\n                                <CircularProgressbar\r\n                                    value={this.state.postion / 3}\r\n                                    maxValue={1}\r\n                                    strokeWidth={24}\r\n                                    styles={buildStyles({\r\n                                        rotation: 0.95,\r\n\r\n                                        textSize: \"0px\",\r\n\r\n                                        pathTransitionDuration: 1,\r\n\r\n                                        pathColor: `#6cd36cd0`,\r\n                                        trailColor: \"#d6d6d6\",\r\n                                        backgroundColor: \"green\",\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"rent_content\">\r\n                    <Option\r\n                        changeSecond={this.changeSecond}\r\n                        position={this.state.postion}\r\n                        changeThird={this.changeThird}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rent);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Button } from \"rsuite\";\r\nimport { GetAllTransactions } from \"../store/actions/Transaction\";\r\nimport Spinner from \"react-loader-spinner\";\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\n\r\nexport class Transaction extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.GetAllTransactions(this.props.userData.email);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\" \"}\r\n                {this.props.transactions &&\r\n                this.props.transactions.length > 0 ? (\r\n                    <Table\r\n                        height={400}\r\n                        data={this.props.transactions}\r\n                        onRowClick={(rowData) => {\r\n                            console.log(rowData);\r\n                        }}\r\n                    >\r\n                        <Column width={150}>\r\n                            <HeaderCell> Name</HeaderCell>\r\n                            <Cell dataKey=\"name\" />\r\n                        </Column>\r\n\r\n                        <Column width={100}>\r\n                            <HeaderCell>Amount</HeaderCell>\r\n                            <Cell dataKey=\"amount\" />\r\n                        </Column>\r\n\r\n                        <Column width={280}>\r\n                            <HeaderCell>Email</HeaderCell>\r\n                            <Cell dataKey=\"email\" />\r\n                        </Column>\r\n                        <Column width={100}>\r\n                            <HeaderCell>Method</HeaderCell>\r\n                            <Cell dataKey=\"method\" />\r\n                        </Column>\r\n                        <Column width={300}>\r\n                            <HeaderCell>Paid At</HeaderCell>\r\n                            <Cell dataKey=\"paidAt\" />\r\n                        </Column>\r\n                    </Table>\r\n                ) : (\r\n                    <div className=\"p-4\">\r\n                        <Spinner\r\n                            width=\"24\"\r\n                            className=\"mx-auto\"\r\n                            height=\"24\"\r\n                            color=\"white\"\r\n                            type=\"ThreeDots\"\r\n                        />\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userData: state.user.user,\r\n    transactions: state.transactions.transactions,\r\n    authLoading: state.user.isLoading,\r\n    authError: state.user.errorMsg,\r\n});\r\n\r\nconst mapDispatchToProps = { GetAllTransactions };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transaction);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Auth from \"./components/Auth\";\r\nimport Rent from \"./components/Rent\";\r\nimport { Button } from \"rsuite\";\r\nimport { LogoutAction } from \"./store/actions/Auth\";\r\nimport Transaction from \"./components/Transaction\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show_transactions: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let { isAuthenticated } = this.props;\r\n        return (\r\n            <Router>\r\n                <div className=\"first-container\">\r\n                    <div className=\" z-depth-1 px-2\">\r\n                        <div>\r\n                            {isAuthenticated && (\r\n                                <div\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        flexDirection: \"row\",\r\n                                        justifyContent: \"space-between\",\r\n                                    }}\r\n                                >\r\n                                    <Button\r\n                                        size={\"sm\"}\r\n                                        className={\r\n                                            \"border z-depth-0 my-2 white border\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                show_transactions: false,\r\n                                            });\r\n                                            this.props.LogoutAction();\r\n                                        }}\r\n                                    >\r\n                                        <small className=\"small \">\r\n                                            SIGNOUT\r\n                                        </small>\r\n                                    </Button>\r\n                                    <Button\r\n                                        size={\"sm\"}\r\n                                        className={\r\n                                            \"border ml-2 z-depth-0 my-2 white border\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                show_transactions: false,\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        <small className=\"small \">RENT</small>\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                        size={\"sm\"}\r\n                                        className={\r\n                                            \"ml-auto border z-depth-0 my-2 white border\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                show_transactions: true,\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        <small className=\"small\">\r\n                                            TRANSACTIONS\r\n                                        </small>\r\n                                    </Button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"app mx-auto border-left border-right z-depth-1 m-auto w-fit p-4 my-auto\">\r\n                            {isAuthenticated ? (\r\n                                <>\r\n                                    {!this.state.show_transactions ? (\r\n                                        <>\r\n                                            <div className=\"app_title locop\">\r\n                                                My Rent\r\n                                            </div>\r\n                                            <Rent />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <div className=\"app_title locop\">\r\n                                                My Transactions\r\n                                            </div>\r\n                                            <Transaction />\r\n                                        </>\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <div className=\"app_title welcome_class text-center\">\r\n                                        Welcome\r\n                                    </div>\r\n                                    <Auth />\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.user.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { LogoutAction })(App);\r\n","import { AUTH_TOKEN } from \"../apis/base\";\r\nimport {\r\n  AUTH_ERROR,\r\n  AUTHENTICATED,\r\n  AUTH_LOADING,\r\n  LOGOUT,\r\n  USER_LOADED,\r\n  CLEAR_AUTH_ERROR,\r\n  PROFILE_CHANGED,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  user: {},\r\n  errorMsg: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n    case PROFILE_CHANGED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n    case CLEAR_AUTH_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case AUTHENTICATED:\r\n      localStorage.setItem(AUTH_TOKEN, action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.user,\r\n      };\r\n\r\n    case AUTH_ERROR:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        token: null,\r\n        user: {},\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_ALL_TRANSACTIONS\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  transactions: [{}]\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_TRANSACTIONS:\r\n      return {\r\n        ...state,\r\n        transactions: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport user from \"./ProfileReducer\";\r\nimport transactions from \"./TransactionReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"user\"],\r\n};\r\n\r\nconst combine = combineReducers({\r\n  user,\r\n  transactions\r\n});\r\n\r\nexport default persistReducer(persistConfig, combine);\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootRuducer from './reducers'\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    rootRuducer,\r\n    compose(\r\n      applyMiddleware(thunk)\r\n      // , typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  )\r\n  const persistor = persistStore(store)\r\n  return { store, persistor }\r\n}\r\n\r\nexport default configureStore();\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./app\";\r\nimport \"./assets/styles/index.scss\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport stor from \"./store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst { store, persistor } = stor;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}