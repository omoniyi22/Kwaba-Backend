{"version":3,"sources":["store/apis/base.js","store/apis/service.js","store/actions/Auth.js","store/types.js","components/Auth/Login/index.jsx","components/Auth/Register/index.jsx","components/Auth/index.jsx","store/actions/Transaction.js","components/Rent/Option.jsx","components/Rent/index.jsx","store/mock.js","components/Transaction.jsx","app.jsx","store/reducers/ProfileReducer.js","store/reducers/TransactionReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["BASE","api","axios","create","baseURL","headers","Accept","API","a","apiToken","localStorage","getItem","console","log","AUTH_TOKEN","defaults","RegisterApi","userDetails","AUTH_API","post","LoginApi","loginDetails","editProfile","id","profileDetails","patch","getAllTransactions","get","clearAuthErrorAction","dispatch","type","Login","props","state","email","password","this","pros","authError","Alert","warning","className","Input","size","placeholder","onChange","e","setState","value","defaultValue","disabled","authLoading","Button","width","height","color","onClick","length","test","LoginAction","appearance","ripple","style","borderRadius","borderWidth","fontVariant","Component","mapDispatchToProps","payload","login","data","user","err","response","msg","error","connect","isLoading","errorMsg","Register","full_name","phone","RegisterAction","regDetails","register","Auth","auth_state","postionTitle","dotenv","config","months","require","CurrencyFormat","Option","accommodation_status","rent_amount","income","stage","userData","payment_duration","label","handlePayment","bind","target","name","MakePayment","Number","first_payment","parseInt","toFixed","ProfileUpdate","changeThird","options","border","fontSize","changeSecond","displayType","thousandSeparator","prefix","profileData","callback","Profile","ProfileId","_id","paymentData","paystack","PaystackPop","newTransaction","key","amount","firstname","split","lastname","onSuccess","onCancel","Rent","postion","maxValue","strokeWidth","styles","buildStyles","rotation","textSize","pathTransitionDuration","pathColor","trailColor","backgroundColor","Column","Table","HeaderCell","Cell","Array","from","map","_","index","rowIndex","firstName","faker","lastName","gender","findName","avatar","image","city","address","street","internet","postcode","zipCode","number","finance","age","Math","floor","random","stars","followers","rating","progress","createRowData","Transaction","GetAllTransactions","transactions","onRowClick","rowData","dataKey","App","show_transactions","isAuthenticated","display","flexDirection","justifyContent","LogoutAction","initialState","token","persistConfig","storage","whitelist","combine","combineReducers","action","setItem","removeItem","persistReducer","configureStore","store","createStore","rootRuducer","compose","applyMiddleware","thunk","persistor","persistStore","stor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"giCAIMA,EAAI,wBAIJC,E,OAAMC,EAAMC,OAAO,CACvBC,QAAQ,GAAD,OAAKJ,EAAL,WACPK,QAAS,CACP,eAAgB,mBAChBC,OAAQ,yBAICC,EAAG,uCAAG,4BAAAC,EAAA,sEAETC,EAAWC,aAAaC,QAXR,eAYtBC,QAAQC,IAAI,CAAEC,WAZQ,cAYIL,aACtBA,IACFR,EAAIc,SAASV,QAdO,eAcpB,UAAsCI,IALzB,kBAORR,GAPQ,yDASRA,GATQ,yDAAH,qDCbHe,EAAW,uCAAG,WAAOC,GAAP,eAAAT,EAAA,sEACJD,IADI,cACrBW,EADqB,yBAElBA,EAASC,KAAT,kBAAiCF,IAFf,2CAAH,sDAIXG,EAAQ,uCAAG,WAAOC,GAAP,eAAAb,EAAA,sEACDD,IADC,cAClBW,EADkB,yBAEfA,EAASC,KAAT,iBAAgCE,IAFjB,2CAAH,sDAKRC,EAAW,uCAAG,WAAOC,EAAIC,GAAX,eAAAhB,EAAA,sEACJD,IADI,cACrBW,EADqB,yBAElBA,EAASO,MAAT,iCAAyCF,GAAMC,IAF7B,2CAAH,wDAgBXE,EAAkB,uCAAG,4BAAAlB,EAAA,sEACXD,IADW,cAC5BW,EAD4B,yBAEzBA,EAASS,IAAT,kBAFyB,2CAAH,qDCdlBC,EAAuB,yDAAM,WAAOC,GAAP,SAAArB,EAAA,sDACxCqB,EAAS,CAAEC,KCdmB,qBDaU,2CAAN,uD,iBEJvBC,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,SAAU,IAJK,EADrB,qDAQE,WACEC,KAAKJ,MAAMJ,yBATf,gCAWE,SAAmBS,GACbD,KAAKJ,MAAMM,YAAcD,EAAKC,WAC5BF,KAAKJ,MAAMM,YACbC,IAAMC,QAAQJ,KAAKJ,MAAMM,WACzBF,KAAKJ,MAAMJ,0BAfnB,oBAkBE,WAAU,IAAD,OACP,OACE,6BACE,yBAAKa,UAAU,wBACb,yBAAKA,UAAU,WAAf,SACA,kBAACC,EAAA,EAAD,CACEZ,KAAM,QACNa,KAAK,KACLF,UAAU,iBACVG,YAAY,cACZC,SAAU,SAACC,GACT,EAAKC,SAAS,CACZb,MAAOY,KAGXvB,GAAI,QACJyB,MAAOZ,KAAKH,MAAMC,MAClBe,aAAcb,KAAKH,MAAMC,MACzBgB,SAAUd,KAAKJ,MAAMmB,eAIzB,yBAAKV,UAAU,wBACb,yBAAKA,UAAU,WAAf,YACA,kBAACC,EAAA,EAAD,CACEZ,KAAM,WACNa,KAAK,KACLF,UAAU,iBACVG,YAAY,iBACZC,SAAU,SAACC,GACT,EAAKC,SAAS,CACZZ,SAAUW,KAGdvB,GAAI,QACJyB,MAAOZ,KAAKH,MAAME,SAClBc,aAAcb,KAAKH,MAAME,SACzBe,SAAUd,KAAKJ,MAAMmB,eAGxBf,KAAKJ,MAAMmB,YACV,kBAACC,EAAA,EAAD,CACEF,UAAQ,EACRT,UAAS,sDAET,kBAAC,IAAD,CACEY,MAAM,MACNZ,UAAU,UACVa,OAAO,MACPC,MAAM,QACNzB,KAAK,eAIT,kBAACsB,EAAA,EAAD,CACEX,UAAS,yCACTe,QAAS,WAAO,IAAD,EACa,EAAKvB,MAAzBC,EADO,EACPA,MAAOC,EADA,EACAA,SAETD,GAASC,EACPA,EAASsB,OAAS,EACpBlB,IAAMC,QACJ,4CACA,MAE4B,IA+B5C,uJACWkB,KAhCsBxB,GACnBK,IAAMC,QAAQ,+BAAgC,KAE9C,EAAKR,MAAM2B,YAAY,CACrBzB,QACAC,aAIJI,IAAMC,QAAQ,qBAAsB,MAGxCoB,WAAW,SACXC,QAAQ,EACRC,MAAO,CAAET,MAAO,OAAQU,aAAc,MAAOC,YAAa,IAE1D,0BACEF,MAAO,CAAEG,YAAa,cACtBxB,UAAU,mCAFZ,eAnGZ,GAA2ByB,aAqH3B,IAKMC,EAAqB,CACzBR,YFnFyB,SAACtC,GAAD,8CAAkB,WAAOQ,GAAP,iBAAArB,EAAA,6DAC3CI,QAAQC,IAAI,CAAEQ,iBAEdQ,EAAS,CACPC,KClDwB,eDmDxBsC,SAAS,IALgC,kBAQvBhD,EAASC,GARc,OAQrCgD,EARqC,OASzCzD,QAAQC,IAAI,CAAEwD,MAAOA,EAAMC,OAC3BzC,EAAS,CACPC,KC1DuB,gBD2DvBsC,QAASC,EAAMC,KACfC,KAAMF,EAAMC,KAAKC,OAbsB,kDAmBzC3D,QAAQC,IAAI,CAAE2D,IAAK,KAAMC,WACrB,KAAMA,UACRD,EAAM,KAAMC,SAASH,KAAKI,IAC1B9D,QAAQC,IAAI,CAAE8D,MAAK,QAEnBH,EAAM,kCAER3C,EAAS,CACPC,KCvEoB,aDwEpBsC,QAASI,IA5B8B,0DAAlB,uDEoFzB5C,wBAGagD,eAVS,SAAC3C,GAAD,MAAY,CAClCkB,YAAalB,EAAMsC,KAAKM,UACxBvC,UAAWL,EAAMsC,KAAKO,YAQgBX,EAAzBS,CAA6C7C,GC/H/CgD,EAAb,kDACE,WAAY/C,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX+C,UAAW,GACX9C,MAAO,GACP+C,MAAO,GACP9C,SAAU,IANK,EADrB,qDAUE,WACEC,KAAKJ,MAAMJ,yBAXf,gCAaE,SAAmBS,GACbD,KAAKJ,MAAMM,YAAcD,EAAKC,WAC5BF,KAAKJ,MAAMM,YACbC,IAAMC,QAAQJ,KAAKJ,MAAMM,WACzBF,KAAKJ,MAAMJ,0BAjBnB,oBAoBE,WAAU,IAAD,OACP,OACE,6BACE,yBAAKa,UAAU,yBACb,yBAAKA,UAAU,WAAf,aACA,kBAACC,EAAA,EAAD,CACEZ,KAAM,QACNa,KAAK,KACLF,UAAU,iBACVG,YAAY,kBACZC,SAAU,SAACC,GACT,EAAKC,SAAS,CACZiC,UAAWlC,KAGfvB,GAAI,YACJyB,MAAOZ,KAAKH,MAAM+C,UAClB/B,aAAcb,KAAKH,MAAM+C,UACzB9B,SAAUd,KAAKJ,MAAMmB,eAGzB,yBAAKV,UAAU,wBACb,yBAAKA,UAAU,WAAf,SACA,kBAACC,EAAA,EAAD,CACEZ,KAAM,QACNa,KAAK,KACLF,UAAU,iBACVG,YAAY,cACZC,SAAU,SAACC,GACT,EAAKC,SAAS,CACZb,MAAOY,KAGXvB,GAAI,QACJyB,MAAOZ,KAAKH,MAAMC,MAClBe,aAAcb,KAAKH,MAAMC,MACzBgB,SAAUd,KAAKJ,MAAMmB,eAIzB,yBAAKV,UAAU,wBACb,yBAAKA,UAAU,WAAf,gBACA,kBAACC,EAAA,EAAD,CACEZ,KAAM,SACNa,KAAK,KACLF,UAAU,iBACVG,YAAY,qBACZC,SAAU,SAACC,GACT,EAAKC,SAAS,CACZkC,MAAOnC,KAGXvB,GAAI,QACJyB,MAAOZ,KAAKH,MAAMgD,MAClBhC,aAAcb,KAAKH,MAAMgD,MACzB/B,SAAUd,KAAKJ,MAAMmB,eAGzB,yBAAKV,UAAU,wBACb,yBAAKA,UAAU,WAAf,YACA,kBAACC,EAAA,EAAD,CACEZ,KAAM,WACNa,KAAK,KACLF,UAAU,iBACVG,YAAY,iBACZC,SAAU,SAACC,GACT,EAAKC,SAAS,CACZZ,SAAUW,KAGdvB,GAAI,QACJyB,MAAOZ,KAAKH,MAAME,SAClBc,aAAcb,KAAKH,MAAME,SACzBe,SAAUd,KAAKJ,MAAMmB,eAGxBf,KAAKJ,MAAMmB,YACV,kBAACC,EAAA,EAAD,CACEF,UAAQ,EACRT,UAAS,sDAET,kBAAC,IAAD,CACEY,MAAM,MACNZ,UAAU,UACVa,OAAO,MACPC,MAAM,QACNzB,KAAK,eAIT,kBAACsB,EAAA,EAAD,CACEX,UAAS,yCACTe,QAAS,WAAO,IAAD,EAC+B,EAAKvB,MAA3C+C,EADO,EACPA,UAAW9C,EADJ,EACIA,MAAO+C,EADX,EACWA,MAAO9C,EADlB,EACkBA,SAE3B6C,GAAa9C,GAAS+C,GAAS9C,EAC7BA,EAASsB,OAAS,EACpBlB,IAAMC,QACJ,4CACA,KAEOyC,EAAMxB,OAAS,IAAMwB,EAAMxB,OAAS,GAC7ClB,IAAMC,QAAQ,oCAAqC,MACrB,IAiC5C,uJACWkB,KAlCsBxB,GACnBK,IAAMC,QAAQ,+BAAgC,KAE9C,EAAKR,MAAMkD,eAAe,CACxBF,YACA9C,QACA+C,QACA9C,aAIJI,IAAMC,QAAQ,qBAAsB,MAGxCoB,WAAW,SACXC,QAAQ,EACRC,MAAO,CAAET,MAAO,OAAQU,aAAc,MAAOC,YAAa,IAE1D,0BACEF,MAAO,CAAEG,YAAa,cACtBxB,UAAU,mCAFZ,kBA7IZ,GAA8ByB,aA+J9B,IAKMC,EAAqB,CACzBe,eH7J4B,SAACC,GAAD,8CAAgB,WAAOtD,GAAP,iBAAArB,EAAA,6DAC5CqB,EAAS,CACPC,KChBwB,eDiBxBsC,SAAS,IAHiC,kBAMrBpD,EAAYmE,GANS,OAMtCC,EANsC,OAO1CxE,QAAQC,IAAI,CAAEuE,SAAUA,EAASd,OACjCzC,EAAS,CACPC,KCxBuB,gBDyBvBsC,QAASgB,EAASd,KAClBC,KAAMa,EAASd,KAAKA,OAEtB1D,QAAQC,IAAI,CACVuE,SAAUA,EAASd,OAdqB,kDAkB1C1D,QAAQC,IAAI,CAAE2D,IAAK,KAAMC,WACrB,KAAMA,UACRD,EAAM,KAAMC,SAASH,KAAKI,IAC1B9D,QAAQC,IAAI,CAAE8D,MAAK,QAEnBH,EAAM,kCAER3C,EAAS,CACPC,KCtCoB,aDuCpBsC,QAASI,IA3B+B,0DAAhB,uDG8J5B5C,wBAGagD,eAVS,SAAC3C,GAAD,MAAY,CAClCkB,YAAalB,EAAMsC,KAAKM,UACxBvC,UAAWL,EAAMsC,KAAKO,YAQgBX,EAAzBS,CAA6CG,GC9K/CM,EAAb,kDACE,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEqD,YAAY,GAFV,EADrB,0CAKE,WAAU,IAAD,OACP,OACE,yBAAK7C,UAAU,SACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,cAAcL,KAAKH,MAAMsD,cACxC,yBAAK9C,UAAU,sCACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cAAf,UACA,yBAAKA,UAAU,mBACc,IAA1BL,KAAKH,MAAMqD,WAAuB,kBAAC,EAAD,MAAe,kBAAC,EAAD,OAEpD,yBACE7C,UAAU,0BACVe,QAAS,WACP,EAAKT,SAAS,CAAEuC,YAAa,EAAKrD,MAAMqD,eAG1C,yBACE7C,UAAU,WACVe,QAAS,WACP,EAAKT,SAAS,CAAEuC,YAAa,EAAKrD,MAAMqD,gBAGf,IAA1BlD,KAAKH,MAAMqD,WAAuB,6BAA+B,wCA7BtF,GAA0BpB,aA6CXU,eAJS,SAAC3C,GAAD,MAAY,KAET,GAEZ2C,CAA6CS,G,2DC9C5DG,EAAOC,SAEA,ICSHC,EAASC,EAAQ,KAEjBC,EAAiBD,EAAQ,KAEhBE,EAAb,kDACI,WAAY7D,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAL,yBACI6D,qBAAsB,GACtBC,YAAa,GACbC,OAAQ,GACRC,MAAO,GACJ,EAAKjE,MAAMkE,UALlB,IAMIC,iBAAkB,CACdC,MAAO,EAAKpE,MAAMkE,SAAX,UACE,EAAKlE,MAAMkE,SAASC,iBADtB,UAED,UACNnD,MAAO,EAAKhB,MAAMkE,SAAX,UACE,EAAKlE,MAAMkE,SAASC,iBADtB,WAED,cAGd,EAAKE,cAAgB,EAAKA,cAAcC,KAAnB,gBAjBN,EADvB,qDAqBI,WACIlE,KAAKJ,MAAMJ,yBAtBnB,gCAwBI,SAAmBS,GACXD,KAAKJ,MAAMM,YAAcD,EAAKC,WAC1BF,KAAKJ,MAAMM,YACXC,IAAMC,QAAQJ,KAAKJ,MAAMM,WACzBF,KAAKJ,MAAMJ,0BA5B3B,sBAgCI,SAASkB,GACLV,KAAKW,SAAL,eACKD,EAAEyD,OAAOC,KAAO1D,EAAEyD,OAAOvD,UAlCtC,2BAsCI,WAAiB,IAAD,SAERZ,KAAKH,MADH6D,EADM,EACNA,qBAAsBE,EADhB,EACgBA,OAAQD,EADxB,EACwBA,YAAaI,EADrC,EACqCA,iBAE7CL,GAAwBE,GAAUD,GAAeI,EACjD/D,KAAKJ,MAAMyE,YACP,CACIX,uBACAE,SACAD,YAA8C,IAAjCW,OAAOtE,KAAKH,MAAM8D,aAC/BY,cAAeD,OACXA,OACItE,KAAKH,MAAM8D,YACPa,SAASxE,KAAKH,MAAMkE,iBAAiBnD,QAER,IAAjC0D,OAAOtE,KAAKH,MAAM8D,cACxBc,QAAQ,GACVV,iBAAkBS,SAAST,EAAiBnD,SAGhD,kBACI,EAAKhB,MAAM8E,cACP,CACIhB,uBACAE,SACAD,cACAI,iBAAkBS,SAAST,EAAiBnD,SAEhD,WACI,EAAKD,SAAS,CACVkD,MAAO,MAEX,EAAKjE,MAAM+E,oBAK3BxE,IAAMC,QAAQ,qBAAsB,OA1EhD,oBA8EI,WAAU,IAAD,OACL,OACI,oCACI,yBAAKC,UAAU,iBACW,IAArBL,KAAKH,MAAMgE,OACR,yBAAKxD,UAAU,UACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,WAAf,qCAGA,kBAACW,EAAA,EAAD,CACIQ,WAAW,SACXnB,UAAS,4CAED,6BADJL,KAAKH,MAAM6D,sBAEX,UAEJtC,QAAS,WACL,EAAKT,SAAS,CACV+C,qBACI,8BAGZjC,QAAQ,EACRC,MAAO,CACHT,MAAO,OACPU,aAAc,MACdC,YAAa,IAGjB,0BAAMvB,UAAU,cAAhB,6BAIJ,kBAACW,EAAA,EAAD,CACIX,UAAS,4CAED,gCADJL,KAAKH,MAAM6D,sBAEX,UAEJtC,QAAS,WACL,EAAKT,SAAS,CACV+C,qBACI,iCAGZlC,WAAW,SACXC,QAAQ,EACRC,MAAO,CACHT,MAAO,OACPU,aAAc,MACdC,YAAa,IAGjB,0BAAMvB,UAAU,cAAhB,gCAIJ,kBAACW,EAAA,EAAD,CACIQ,WAAW,SACXnB,UAAS,iDAED,wBADJL,KAAKH,MAAM6D,sBACkB,UAEjCtC,QAAS,WACL,EAAKT,SAAS,CACV+C,qBACI,yBAGZjC,QAAQ,EACRC,MAAO,CACHT,MAAO,OACPU,aAAc,MACdC,YAAa,IAGjB,0BAAMvB,UAAU,cAAhB,yBAMR,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,WAAf,yCAGA,kBAACC,EAAA,EAAD,CACIZ,KAAM,SACNa,KAAK,KACLF,UAAU,iBACVG,YAAY,SACZC,SAAU,SAACC,GACP,EAAKC,SAAS,CACVgD,YAAajD,KAGrBvB,GAAI,cACJyB,MAAOZ,KAAKH,MAAM8D,YAClB9C,aAAcb,KAAKH,MAAM8D,eAGjC,yBAAKtD,UAAU,wBACX,yBAAKA,UAAU,WAAf,mCAGA,kBAACC,EAAA,EAAD,CACIZ,KAAM,SACNa,KAAK,KACLF,UAAU,iBACVG,YAAY,SACZC,SAAU,SAACC,GACP,EAAKC,SAAS,CACViD,OAAQlD,KAGhBvB,GAAI,SACJyB,MAAOZ,KAAKH,MAAM+D,OAClB/C,aAAcb,KAAKH,MAAM+D,UAGjC,yBAAKvD,UAAU,wBACX,yBAAKA,UAAU,WAAf,4BAIJ,kBAAC,IAAD,CACIA,UAAU,WACVuE,QAAStB,EACT9C,YAAY,cACZC,SAAU,SAACC,GACPlC,QAAQC,IAAI,CAAEiC,MACd,EAAKC,SAAS,CACVoD,iBAAkBrD,KAG1B0D,KAAM,mBACNxD,MAAOZ,KAAKH,MAAMkE,iBAClBlD,aAAcb,KAAKH,MAAMkE,iBACzBrC,MAAO,CACHmD,OAAQ,YACRC,SAAU,UAIlB,kBAAC9D,EAAA,EAAD,CACIX,UAAS,yCACTe,QAAS,WAAO,IAAD,EAMP,EAAKvB,MAJL6D,EAFO,EAEPA,qBACAE,EAHO,EAGPA,OACAD,EAJO,EAIPA,YACAI,EALO,EAKPA,iBAEJvF,QAAQC,IAAI,CACRiF,uBACAE,SACAD,cACAI,qBAGAL,GACAE,GACAD,GACAI,GAEA,EAAKpD,SAAS,CACVkD,MAAO,MAEX,EAAKjE,MAAMmF,gBAEX5E,IAAMC,QACF,qBACA,MAIZoB,WAAW,SACXC,QAAQ,EACRC,MAAO,CACHT,MAAO,OACPU,aAAc,MACdC,YAAa,IAGjB,0BACIF,MAAO,CAAEG,YAAa,cACtBxB,UAAU,mCAFd,UASU,MAArBL,KAAKH,MAAMgE,OACR,yBAAKxD,UAAU,SACX,6BACI,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,WAAf,uBAGA,kBAACC,EAAA,EAAD,CACIC,KAAK,KACLF,UAAU,2BACVG,YAAY,SACZd,KAAM,SACNe,SAAU,SAACC,GACP,EAAKC,SAAS,CACVgD,YAAajD,KAGrBvB,GAAI,cACJyB,MAAOZ,KAAKH,MAAM8D,YAClB9C,aAAcb,KAAKH,MAAM8D,eAGjC,yBAAKtD,UAAU,SAEf,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,WAAf,yBAIJ,kBAAC,IAAD,CACIA,UAAU,WACVqB,MAAO,CACHmD,OAAQ,YACRC,SAAU,QAEdF,QAAStB,EACT9C,YAAY,cACZC,SAAU,SAACC,GACPlC,QAAQC,IAAI,CAAEiC,MACd,EAAKC,SAAS,CACVoD,iBAAkBrD,KAG1B0D,KAAM,mBACNxD,MAAOZ,KAAKH,MAAMkE,iBAClBlD,aAAcb,KAAKH,MAAMkE,mBAE7B,yBAAK1D,UAAU,SACf,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,WAAf,kBAIA,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,0CACX,yBAAKA,UAAU,aAAf,wBAGA,yBAAKA,UAAU,sBACX,kBAACmD,EAAD,CACI5C,MACIZ,KAAKH,MAAM8D,YAEfqB,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,aAIpB,yBAAK7E,UAAU,0CACX,yBAAKA,UAAU,aAAf,oBAGA,yBAAKA,UAAU,sBACX,kBAACmD,EAAD,CACI5C,MAAO0D,OACHA,OACItE,KAAKH,MACA8D,YACDa,SACIxE,KAAKH,MACAkE,iBACAnD,QAOT,IAJJ0D,OACItE,KAAKH,MACA8D,cAGfc,QAAQ,GACVO,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,aAIpB,yBAAK7E,UAAU,6BACX,yBAAKA,UAAU,aAAf,UAGA,yBAAKA,UAAU,sBAEPL,KAAKH,MAAMkE,iBACNnD,UAOxBZ,KAAKJ,MAAMmB,YACR,kBAACC,EAAA,EAAD,CACIF,UAAQ,EACRT,UAAS,sDAET,kBAAC,IAAD,CACIY,MAAM,KACNZ,UAAU,UACVa,OAAO,KACPC,MAAM,QACNzB,KAAK,eAIb,kBAACsB,EAAA,EAAD,CACIX,UAAS,6CACTe,QAASpB,KAAKiE,cACdzC,WAAW,SACXC,QAAQ,EACRC,MAAO,CACHT,MAAO,OACPU,aAAc,MACdC,YAAa,IAGjB,0BACIF,MAAO,CACHG,YAAa,cAEjBxB,UAAU,mCAJd,mCAxZxC,GAA4ByB,aAibtBC,EAAqB,CAAE2C,cNhX3B,SAACS,EAAaC,GAAd,8CAA2B,WAAO3F,EAAUI,GAAjB,qBAAAzB,EAAA,6DACzBI,QAAQC,IAAI,CAAE0G,gBADW,kBAGjB1F,EAAS,CAAEC,KCnFK,iBDgFC,uBAIHG,IAAQsC,KAJL,cAInBkD,EAJmB,OAKvB7G,QAAQC,IAAI,CAAE4G,QAASA,IACnBC,EAAYD,EAAQlD,KAAKoD,IANN,UAONrG,EAAYoG,EAAWH,GAPjB,eAOnBhD,EAPmB,iBASVA,EAAKD,KAAKC,KATA,eASvBA,EATuB,OAYvB3D,QAAQC,IAAI,CAAE0D,SAZS,UAajB1C,EAAS,CACbC,KChGuB,kBDiGvBsC,QAASG,IAfY,QAiBvBiD,IAjBuB,kDAoBvB5G,QAAQC,IAAI,CAAE2D,IAAK,KAAMC,WACzB7D,QAAQC,IAAI,CAAE2D,IAAI,EAAD,KACb,KAAMC,UACRD,EAAM,KAAMC,SAASH,KAAKI,IAC1B9D,QAAQC,IAAI,CAAE8D,MAAK,QAEnBH,EAAM,kCAER3C,EAAS,CACPC,KC3GkB,aD4GlBsC,QAASI,IA9BY,0DAA3B,yDMgX0CiC,YD7b1C,SAACmB,EAAaJ,GAAd,8CAA2B,WAAO3F,EAAUI,GAAjB,uBAAAzB,EAAA,6DACzBI,QAAQC,IAAI,CAAE+G,gBADW,kBAGjB/F,EAAS,CAAEC,KJNK,iBIGC,uBAIHG,IAAQsC,KAJL,cAInBkD,EAJmB,OAKnBvF,EAAQuF,EAAQlD,KAAKrC,MACrBsE,EAAOiB,EAAQlD,KAAKS,UAGpB6C,EAAW,IAAIC,IATI,UAUjBD,EAASE,eAAe,CAC5BC,IAAK,mDACLC,OAAoC,IAA5BL,EAAYjB,cACpBzE,QACAgG,UAAW1B,EAAK2B,MAAM,KAAK,GAC3BC,SAAU5B,EAAK2B,MAAM,KAAK,GAEpBE,UAPsB,WAOT,OAAD,oHACVb,IADU,8CAIZc,SAXsB,WAWV,OAAD,oGACfzG,EAAS,CACPC,KJxBc,aIyBdsC,QAAS,qBAHI,gDArBI,0DA+BvBxD,QAAQC,IAAI,CAAE2D,IAAI,EAAD,KAEfA,EADE,KAAMC,SACF,KAAMA,SAASH,KAAKI,IAGpB,kCAER7C,EAAS,CACPC,KJxCkB,aIyClBsC,QAASI,IAxCY,0DAA3B,yDC6buD5C,wBAE1CgD,eARS,SAAC3C,GAAD,MAAY,CAChCiE,SAAUjE,EAAMsC,KAAKA,KACrBpB,YAAalB,EAAMsC,KAAKM,UACxBvC,UAAWL,EAAMsC,KAAKO,YAKcX,EAAzBS,CAA6CiB,G,SChc/C0C,G,OAAb,kDACE,WAAYvG,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXuG,QAAS,EACTjD,aAAc,kBAEhB,EAAK4B,aAAe,EAAKA,aAAab,KAAlB,gBACpB,EAAKS,YAAc,EAAKA,YAAYT,KAAjB,gBAPF,EADrB,gDAUE,WACElE,KAAKW,SAAS,CAAEyF,QAAS,EAAGjD,aAAc,eAX9C,yBAaE,WACEnD,KAAKW,SAAS,CAAEyF,QAAS,EAAGjD,aAAc,4BAd9C,oBAgBE,WAEE,OACE,yBAAK9C,UAAU,SACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,cAAcL,KAAKH,MAAMsD,cACxC,yBAAK9C,UAAU,kCACb,yBAAKA,UAAU,aAAaL,KAAKH,MAAMuG,QAAvC,SACA,yBAAK/F,UAAU,6BACb,yBAAKqB,MAAO,CAAET,MAAO,GAAIC,OAAQ,KAC/B,kBAAC,IAAD,CACEN,MAAOZ,KAAKH,MAAMuG,QAAU,EAC5BC,SAAU,EACVC,YAAa,GACbC,OAAQC,YAAY,CAClBC,SAAU,IAEVC,SAAU,MAEVC,uBAAwB,EAExBC,UAAU,YACVC,WAAY,UACZC,gBAAiB,gBAO7B,yBAAKzG,UAAU,gBACb,kBAAC,EAAD,CACE0E,aAAc/E,KAAK+E,aACnBJ,YAAa3E,KAAK2E,oBAjD9B,GAA0B7C,cA4DXU,eADS,SAAC3C,GAAD,MAAY,KAFT,GAGZ2C,CAA6C2D,G,qBCjElC9E,GCMlB0F,GAA6BC,IAA7BD,OAAQE,GAAqBD,IAArBC,WAAYC,GAASF,IAATE,KACtBhF,IDPoBb,GCOH,GDmCd8F,MAAMC,KAAK,CAAE/F,YAAUgG,KAAI,SAACC,EAAGC,GACpC,OA1CoB,SAAAC,GACpB,IAAMC,EAAYC,QAAMtD,KAAKqD,YACvBE,EAAWD,QAAMtD,KAAKuD,WACtBC,EAASF,QAAMtD,KAAKwD,QAAO,GAC3BxD,EAAOsD,QAAMtD,KAAKyD,SAASJ,EAAWE,EAAUC,GAChDE,EAASJ,QAAMK,MAAMD,SAErBE,EAAON,QAAMO,QAAQD,OACrBE,EAASR,QAAMO,QAAQC,SACvBpI,EAAQ4H,QAAMS,SAASrI,QACvBsI,EAAWV,QAAMO,QAAQI,UACzBxF,EAAQ6E,QAAM7E,MAAMyF,SACpBzC,EAAS6B,QAAMa,QAAQ1C,OAAO,IAAM,KAQ1C,MAAO,CACL1G,GAAIqI,EAAW,EACfpD,OACAqD,YACAE,WACAG,SACAE,OACAE,SACAE,WACAtI,QACA+C,QACA+E,SACAY,IAlBUC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAmB3CC,MAlBYH,KAAKC,MAAsB,IAAhBD,KAAKE,UAmB5BE,UAlBgBJ,KAAKC,MAAsB,IAAhBD,KAAKE,UAmBhCG,OAlBa,EAAIL,KAAKC,MAAsB,EAAhBD,KAAKE,UAmBjCI,SAlBeN,KAAKC,MAAsB,IAAhBD,KAAKE,UAmB/B9C,UAKKmD,CAAczB,OClCzB/I,QAAQC,IAAI,CAAEyD,UAEP,IAAM+G,GAAb,kDACI,WAAYrJ,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,EADvB,qDAMI,WACIG,KAAKJ,MAAMsJ,uBAPnB,oBAUI,WACI,OACI,oCACK,IACAlJ,KAAKJ,MAAMuJ,cACZnJ,KAAKJ,MAAMuJ,aAAa9H,OAAS,EAC7B,kBAAC2F,EAAA,EAAD,CACI9F,OAAQ,IACRgB,KAAMlC,KAAKJ,MAAMuJ,aACjBC,WAAY,SAACC,GACT7K,QAAQC,IAAI4K,KAGhB,kBAACtC,GAAD,CAAQ9F,MAAO,KACX,kBAACgG,GAAD,cACA,kBAACC,GAAD,CAAMoC,QAAQ,UAGlB,kBAACvC,GAAD,CAAQ9F,MAAO,KACX,kBAACgG,GAAD,eACA,kBAACC,GAAD,CAAMoC,QAAQ,YAGlB,kBAACvC,GAAD,CAAQ9F,MAAO,KACX,kBAACgG,GAAD,cACA,kBAACC,GAAD,CAAMoC,QAAQ,WAElB,kBAACvC,GAAD,CAAQ9F,MAAO,KACX,kBAACgG,GAAD,eACA,kBAACC,GAAD,CAAMoC,QAAQ,YAElB,kBAACvC,GAAD,CAAQ9F,MAAO,KACX,kBAACgG,GAAD,gBACA,kBAACC,GAAD,CAAMoC,QAAQ,aAItB,yBAAKjJ,UAAU,OACX,kBAAC,IAAD,CACIY,MAAM,KACNZ,UAAU,UACVa,OAAO,KACPC,MAAM,QACNzB,KAAK,oBArDjC,GAAiCoC,aAoE3BC,GAAqB,CAAEmH,mBJ3BK,yDAAM,WAAOzJ,EAAUI,GAAjB,eAAAzB,EAAA,sEAChCqB,EAAS,CAAEC,KJlDS,iBIiDY,gCAGXJ,IAHW,cAGhC6J,EAHgC,OAIpC3K,QAAQC,IAAI,CAAE0K,aAAcA,EAAajH,KAAKA,OAJV,SAMfiH,EAAajH,KAAKA,KANH,OAMpCiH,EANoC,OAQpC1J,EAAS,CACPC,KJpD8B,uBIqD9BsC,QAASmH,IAVyB,kDAepC3K,QAAQC,IAAI,CAAE2D,IAAK,KAAMC,WACrB,KAAMA,SACF,KAAMA,SAASH,KAAKK,MAEpB,kCAER9C,EAAS,CACPC,KJjE8B,uBIkE9BsC,QAAS,KAvByB,0DAAN,0DI6BnBQ,gBARS,SAAC3C,GAAD,MAAY,CAChCsJ,aAActJ,EAAMsJ,aAAaA,aACjCpI,YAAalB,EAAMsC,KAAKM,UACxBvC,UAAWL,EAAMsC,KAAKO,YAKcX,GAAzBS,CAA6CyG,ICzEtDM,G,kDACF,WAAY3J,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT2J,mBAAmB,GAHR,E,0CAOnB,WAAU,IAAD,OACCC,EAAoBzJ,KAAKJ,MAAzB6J,gBACN,OACI,kBAAC,IAAD,KACI,yBAAKpJ,UAAU,mBACX,yBAAKA,UAAU,mBACX,6BACKoJ,GACG,yBACI/H,MAAO,CACHgI,QAAS,OACTC,cAAe,MACfC,eAAgB,kBAGpB,kBAAC5I,EAAA,EAAD,CACIT,KAAM,KACNF,UACI,qCAEJe,QAAS,WACL,EAAKT,SAAS,CACV6I,mBAAmB,IAEvB,EAAK5J,MAAMiK,iBAGf,2BAAOxJ,UAAU,UAAjB,YAIJ,kBAACW,EAAA,EAAD,CACIT,KAAM,KACNF,UACI,0CAEJe,QAAS,WACL,EAAKT,SAAS,CACV6I,mBAAmB,MAI3B,2BAAOnJ,UAAU,UAAjB,SAGJ,kBAACW,EAAA,EAAD,CACIT,KAAM,KACNF,UACI,6CAEJe,QAAS,WACL,EAAKT,SAAS,CACV6I,mBAAmB,MAI3B,2BAAOnJ,UAAU,SAAjB,mBAOhB,yBAAKA,UAAU,2EACVoJ,EACG,oCACMzJ,KAAKH,MAAM2J,kBAQT,oCACI,yBAAKnJ,UAAU,mBAAf,mBAGA,kBAAC,GAAD,OAXJ,oCACI,yBAAKA,UAAU,mBAAf,WAGA,kBAAC,EAAD,QAYZ,oCACI,yBAAKA,UAAU,uCAAf,WAGA,kBAAC,EAAD,e,GA/FlByB,aA6GHU,gBAHS,SAAC3C,GAAD,MAAY,CAChC4J,gBAAiB5J,EAAMsC,KAAKsH,mBAEQ,CAAEI,aVCd,yDAAM,WAAOpK,GAAP,SAAArB,EAAA,sDAChCqB,EAAS,CAAEC,KCjHS,WDgHY,2CAAN,wDUDb8C,CAA2C+G,I,2DC5GpDO,GAAe,CACnBC,MAAOzL,aAAaC,QAAQ,SAC5BkL,iBAAiB,EACjBhH,WAAW,EACXN,KAAM,GACNO,SAAU,ICXNoH,GAAe,CACnBX,aAAc,CAAC,KCEXa,GAAgB,CACpBpE,IAAK,OACLqE,aACAC,UAAW,CAAC,SAGRC,GAAUC,aAAgB,CAC9BjI,KFIa,WAAyC,IAA/BtC,EAA8B,uDAAtBiK,GAAcO,EAAQ,uCACrD,OAAQA,EAAO3K,MACb,IVhBwB,eUiBtB,OAAO,2BACFG,GADL,IAEE4C,WAAW,IAEf,IVpBuB,cUqBrB,OAAO,2BACF5C,GADL,IAEE4J,iBAAiB,EACjBhH,WAAW,EACXN,KAAMkI,EAAOrI,UAEjB,IV/B4B,mBUgC1B,OAAO,2BACFnC,GADL,IAEE4C,WAAW,EACXC,SAAU,KAEd,IVnCyB,gBUqCvB,OADApE,aAAagM,QbhCO,cagCaD,EAAOrI,QAAQ+H,OACzC,uCACFlK,GACAwK,EAAOrI,SAFZ,IAGEyH,iBAAiB,EACjBhH,WAAW,EACXN,KAAMkI,EAAOlI,OAGjB,IV1CsB,aU2CpB,OAAO,uCACFtC,GACAwK,EAAOrI,SAFZ,IAGES,WAAW,EACXC,SAAU2H,EAAOrI,UAGrB,IVjDkB,SUmDhB,OADA1D,aAAaiM,WAAW,SACjB,CACLR,MAAO,KACP5H,KAAM,GACNsH,iBAAiB,EACjBhH,WAAW,GAEf,QACE,OAAO5C,IElDXsJ,aDPa,WAAyC,IAA/BtJ,EAA8B,uDAAtBiK,GAAcO,EAAQ,uCACrD,OAAQA,EAAO3K,MACb,IXAgC,uBWC9B,OAAO,2BACFG,GADL,IAEEsJ,aAAckB,EAAOrI,UAEzB,QACE,OAAOnC,MCEE2K,gBAAeR,GAAeG,ICC9BM,GAZQ,WACrB,IAAMC,EAAQC,aACZC,GACAC,aACEC,aAAgBC,QAKpB,MAAO,CAAEL,QAAOM,UADEC,aAAaP,IAIlBD,G,UCTPC,GAAqBQ,GAArBR,MAAOM,GAAcE,GAAdF,UAEfG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUX,MAAOA,IACf,kBAAC,KAAD,CAAaM,UAAWA,IACtB,kBAAC,GAAD,SAINM,SAASC,eAAe,W","file":"static/js/main.a982082c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\n// const BASE = `https://kwaba.onrender.com`;\r\nconst BASE = `http://localhost:8001`;\r\n\r\n\r\nexport const AUTH_TOKEN = \"benny-token\";\r\nconst api = axios.create({\r\n  baseURL: `${BASE}/v1/api`,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"multipart/form-data\",\r\n  },\r\n});\r\n\r\nexport const API = async () => {\r\n  try {\r\n    const apiToken = localStorage.getItem(AUTH_TOKEN);\r\n    console.log({ AUTH_TOKEN, apiToken });\r\n    if (apiToken) {\r\n      api.defaults.headers[AUTH_TOKEN] = `${apiToken}`;\r\n    }\r\n    return api;\r\n  } catch (error) {\r\n    return api;\r\n  }\r\n};\r\n\r\nexport default BASE;\r\n","import { API } from \"./base\";\r\n\r\n//Auth Api\r\nexport const RegisterApi = async (userDetails) => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.post(`/profile/signUp`, userDetails);\r\n};\r\nexport const LoginApi = async (loginDetails) => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.post(`/profile/login`, loginDetails);\r\n};\r\n\r\nexport const editProfile = async (id, profileDetails) => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.patch(`/profile/updateProfile/${id}`, profileDetails);\r\n};\r\n\r\nexport const editProfileInstructor = async (profileDetails) => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.patch(`/account/instructor`, profileDetails);\r\n};\r\n\r\nexport const RefreshApi = async (loginDetails) => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.post(`/auth/refreshToken`, loginDetails);\r\n};\r\n\r\n//  Transactions\r\nexport const getAllTransactions = async () => {\r\n  let AUTH_API = await API();\r\n  return AUTH_API.get(`/transactions`);\r\n};\r\n\r\n","import {\r\n  RegisterApi,\r\n  LoginApi,\r\n  editProfile,\r\n} from \"../apis/service\";\r\nimport {\r\n  AUTHENTICATED,\r\n  AUTH_LOADING,\r\n  LOGOUT,\r\n  AUTH_ERROR,\r\n  CLEAR_AUTH_ERROR,\r\n  PROFILE_CHANGED,\r\n} from \"../types\";\r\n\r\nexport const clearAuthErrorAction = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_AUTH_ERROR });\r\n};\r\n\r\nexport const RegisterAction = (regDetails) => async (dispatch) => {\r\n  dispatch({\r\n    type: AUTH_LOADING,\r\n    payload: true,\r\n  });\r\n  try {\r\n    let register = await RegisterApi(regDetails);\r\n    console.log({ register: register.data });\r\n    dispatch({\r\n      type: AUTHENTICATED,\r\n      payload: register.data,\r\n      user: register.data.data,\r\n    });\r\n    console.log({\r\n      register: register.data,\r\n    });\r\n  } catch (error) {\r\n    let err\r\n    console.log({ err: error.response });\r\n    if (error.response) {\r\n      err = error.response.data.msg;\r\n      console.log({ error });\r\n    } else {\r\n      err = \"Something went wrong. Try Again\";\r\n    }\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\nexport const LoginAction = (loginDetails) => async (dispatch) => {\r\n  console.log({ loginDetails });\r\n\r\n  dispatch({\r\n    type: AUTH_LOADING,\r\n    payload: true,\r\n  });\r\n  try {\r\n    let login = await LoginApi(loginDetails);\r\n    console.log({ login: login.data });\r\n    dispatch({\r\n      type: AUTHENTICATED,\r\n      payload: login.data,\r\n      user: login.data.user,\r\n    });\r\n\r\n   \r\n  } catch (error) {\r\n    let err\r\n    console.log({ err: error.response });\r\n    if (error.response) {\r\n      err = error.response.data.msg;\r\n      console.log({ error });\r\n    } else {\r\n      err = \"Something went wrong. Try Again\";\r\n    }\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\nexport const ProfileUpdate =\r\n  (profileData, callback) => async (dispatch, state) => {\r\n    console.log({ profileData });\r\n    try {\r\n      await dispatch({ type: AUTH_LOADING });\r\n      let Profile = await state().user;\r\n      console.log({ Profile: Profile });\r\n      let ProfileId = Profile.user._id;\r\n      let user = await editProfile(ProfileId, profileData);\r\n\r\n      user = await user.data.user;\r\n      // user = { ...Profile, user };\r\n\r\n      console.log({ user });\r\n      await dispatch({\r\n        type: PROFILE_CHANGED,\r\n        payload: user,\r\n      });\r\n      callback();\r\n    } catch (error) {\r\n      let err\r\n      console.log({ err: error.response });\r\n      console.log({ err: error });\r\n      if (error.response) {\r\n        err = error.response.data.msg;\r\n        console.log({ error });\r\n      } else {\r\n        err = \"Something went wrong. Try Again\";\r\n      }\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const LogoutAction = () => async (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","// AUTH_TYPES\r\nexport const CLEAR_AUTH_ERROR = \"CLEAR_AUTH_ERROR\";\r\nexport const PROFILE_CHANGED = \"PROFILE_CHANGED\";\r\nexport const AUTHENTICATED = \"AUTHENTICATED\";\r\nexport const AUTH_LOADING = \"AUTH_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const MADE_PAYMENT = \"MADE_PAYMENT\";\r\nexport const GET_ALL_TRANSACTIONS = \"GET_ALL_TRANSACTIONS\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Input, Alert } from \"rsuite\";\r\nimport \"rsuite/dist/styles/rsuite-default.css\";\r\nimport {\r\n  LoginAction,\r\n  clearAuthErrorAction,\r\n} from \"./../../../store/actions/Auth\";\r\nimport Spinner from \"react-loader-spinner\";\r\n\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.clearAuthErrorAction();\r\n  }\r\n  componentDidUpdate(pros) {\r\n    if (this.props.authError !== pros.authError)\r\n      if (this.props.authError) {\r\n        Alert.warning(this.props.authError);\r\n        this.props.clearAuthErrorAction();\r\n      }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"rent_opion for_input\">\r\n          <div className=\"Op_head\">Email</div>\r\n          <Input\r\n            type={\"email\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                email: e,\r\n              });\r\n            }}\r\n            id={\"email\"}\r\n            value={this.state.email}\r\n            defaultValue={this.state.email}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"rent_opion for_input\">\r\n          <div className=\"Op_head\">Password</div>\r\n          <Input\r\n            type={\"password\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                password: e,\r\n              });\r\n            }}\r\n            id={\"email\"}\r\n            value={this.state.password}\r\n            defaultValue={this.state.password}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n        {this.props.authLoading ? (\r\n          <Button\r\n            disabled\r\n            className={`balm w-100 heart text-center mt-2 butas bg-success`}\r\n          >\r\n            <Spinner\r\n              width=\"9.5\"\r\n              className=\"mx-auto\"\r\n              height=\"9.5\"\r\n              color=\"white\"\r\n              type=\"ThreeDots\"\r\n            />\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            className={`balm text-center mt-2 butas bg-success`}\r\n            onClick={() => {\r\n              let { email, password } = this.state;\r\n\r\n              if (email && password) {\r\n                if (password.length < 6) {\r\n                  Alert.warning(\r\n                    \"Password show be greater than 6 charaters\",\r\n                    5000\r\n                  );\r\n                } else if (EmailTest(email) === false) {\r\n                  Alert.warning(\"Enter a valid email address.\", 5000);\r\n                } else {\r\n                  this.props.LoginAction({\r\n                    email,\r\n                    password,\r\n                  });\r\n                }\r\n              } else {\r\n                Alert.warning(\"Please all fields.\", 5000);\r\n              }\r\n            }}\r\n            appearance=\"subtle\"\r\n            ripple={true}\r\n            style={{ width: \"100%\", borderRadius: \"6px\", borderWidth: 2 }}\r\n          >\r\n            <span\r\n              style={{ fontVariant: \"small-caps\" }}\r\n              className=\"text-white op_button_next small\"\r\n            >\r\n              Login\r\n            </span>\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport function EmailTest(d) {\r\n  let email =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return email.test(d);\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  authLoading: state.user.isLoading,\r\n  authError: state.user.errorMsg,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  LoginAction,\r\n  clearAuthErrorAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Input, Alert } from \"rsuite\";\r\nimport \"rsuite/dist/styles/rsuite-default.css\";\r\nimport {\r\n  RegisterAction,\r\n  clearAuthErrorAction,\r\n} from \"./../../../store/actions/Auth\";\r\nimport Spinner from \"react-loader-spinner\";\r\n\r\nexport class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      full_name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.clearAuthErrorAction();\r\n  }\r\n  componentDidUpdate(pros) {\r\n    if (this.props.authError !== pros.authError)\r\n      if (this.props.authError) {\r\n        Alert.warning(this.props.authError);\r\n        this.props.clearAuthErrorAction();\r\n      }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"rent_opion for_input \">\r\n          <div className=\"Op_head\">Full Name</div>\r\n          <Input\r\n            type={\"email\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter full name\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                full_name: e,\r\n              });\r\n            }}\r\n            id={\"full_name\"}\r\n            value={this.state.full_name}\r\n            defaultValue={this.state.full_name}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n        <div className=\"rent_opion for_input\">\r\n          <div className=\"Op_head\">Email</div>\r\n          <Input\r\n            type={\"email\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                email: e,\r\n              });\r\n            }}\r\n            id={\"email\"}\r\n            value={this.state.email}\r\n            defaultValue={this.state.email}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"rent_opion for_input\">\r\n          <div className=\"Op_head\">Phone Number</div>\r\n          <Input\r\n            type={\"number\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter phone number\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                phone: e,\r\n              });\r\n            }}\r\n            id={\"email\"}\r\n            value={this.state.phone}\r\n            defaultValue={this.state.phone}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n        <div className=\"rent_opion for_input\">\r\n          <div className=\"Op_head\">Password</div>\r\n          <Input\r\n            type={\"password\"}\r\n            size=\"md\"\r\n            className=\"optional_input\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => {\r\n              this.setState({\r\n                password: e,\r\n              });\r\n            }}\r\n            id={\"email\"}\r\n            value={this.state.password}\r\n            defaultValue={this.state.password}\r\n            disabled={this.props.authLoading}\r\n          />\r\n        </div>\r\n        {this.props.authLoading ? (\r\n          <Button\r\n            disabled\r\n            className={`balm w-100 heart text-center mt-2 butas bg-success`}\r\n          >\r\n            <Spinner\r\n              width=\"9.5\"\r\n              className=\"mx-auto\"\r\n              height=\"9.5\"\r\n              color=\"white\"\r\n              type=\"ThreeDots\"\r\n            />\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            className={`balm text-center mt-2 butas bg-success`}\r\n            onClick={() => {\r\n              let { full_name, email, phone, password } = this.state;\r\n\r\n              if (full_name && email && phone && password) {\r\n                if (password.length < 6) {\r\n                  Alert.warning(\r\n                    \"Password show be greater than 6 charaters\",\r\n                    5000\r\n                  );\r\n                } else if (phone.length < 11 || phone.length > 11) {\r\n                  Alert.warning(\"Phone number should be 11 digits.\", 5000);\r\n                } else if (EmailTest(email) === false) {\r\n                  Alert.warning(\"Enter a valid email address.\", 5000);\r\n                } else {\r\n                  this.props.RegisterAction({\r\n                    full_name,\r\n                    email,\r\n                    phone,\r\n                    password,\r\n                  });\r\n                }\r\n              } else {\r\n                Alert.warning(\"Please all fields.\", 5000);\r\n              }\r\n            }}\r\n            appearance=\"subtle\"\r\n            ripple={true}\r\n            style={{ width: \"100%\", borderRadius: \"6px\", borderWidth: 2 }}\r\n          >\r\n            <span\r\n              style={{ fontVariant: \"small-caps\" }}\r\n              className=\"text-white op_button_next small\"\r\n            >\r\n              Register\r\n            </span>\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport function EmailTest(d) {\r\n  let email =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return email.test(d);\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  authLoading: state.user.isLoading,\r\n  authError: state.user.errorMsg,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  RegisterAction,\r\n  clearAuthErrorAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\n\r\nexport class Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { auth_state: false };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\" rent\">\r\n        <div className=\"rent_stages  \">\r\n          <div className=\"rent_title\">{this.state.postionTitle}</div>\r\n          <div className=\"rent_ratio foen heart flex ml-auto\">\r\n            <div className=\"rent_content\">\r\n              <div className=\"my_rent_auth\">\r\n                <div className=\"auth_title\">SignUp</div>\r\n                <div className=\"auth_container\">\r\n                  {this.state.auth_state === false ? <Register /> : <Login />}\r\n                </div>\r\n                <div\r\n                  className=\"switch_auth text-center\"\r\n                  onClick={() => {\r\n                    this.setState({ auth_state: !this.state.auth_state });\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"py-3 pnt\"\r\n                    onClick={() => {\r\n                      this.setState({ auth_state: !this.state.auth_state });\r\n                    }}\r\n                  >\r\n                    {this.state.auth_state === false ? \"Are you registered ? Login\" : \"New to Kwaba? Register now\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import { MADE_PAYMENT, GET_ALL_TRANSACTIONS, AUTH_ERROR, AUTH_LOADING } from \"./../types\"\r\nimport PaystackPop from \"@paystack/inline-js\"\r\nimport dotenv from \"dotenv\"\r\nimport { getAllTransactions } from \"../apis/service\"\r\ndotenv.config()\r\n\r\nexport const MakePayment =\r\n  (paymentData, callback) => async (dispatch, state) => {\r\n    console.log({ paymentData });\r\n    try {\r\n      await dispatch({ type: AUTH_LOADING });\r\n      let Profile = await state().user;\r\n      let email = Profile.user.email;\r\n      let name = Profile.user.full_name;\r\n      // let phone = Profile.user.phone;\r\n\r\n      let paystack = new PaystackPop()\r\n      await paystack.newTransaction({\r\n        key: \"pk_test_5b8d0c3254092c27d8d53aafda069070ceed77f7\",\r\n        amount: paymentData.first_payment * 100,\r\n        email,\r\n        firstname: name.split(\" \")[0],\r\n        lastname: name.split(\" \")[1],\r\n        \r\n        async onSuccess() {\r\n          await callback();\r\n        },\r\n\r\n        async onCancel() {\r\n          dispatch({\r\n            type: AUTH_ERROR,\r\n            payload: \"AN ERROR OCCURED\",\r\n          });\r\n        }\r\n\r\n      })\r\n    } catch (error) {\r\n      let err\r\n      console.log({ err: error });\r\n      if (error.response) {\r\n        err = error.response.data.msg;\r\n        // console.log({ error });\r\n      } else {\r\n        err = \"Something went wrong. Try Again\";\r\n      }\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\nexport const GetAllTransactions = () => async (dispatch, state) => {\r\n  await dispatch({ type: AUTH_LOADING });\r\n  try {\r\n    let transactions = await getAllTransactions();\r\n    console.log({ transactions: transactions.data.data });\r\n\r\n    transactions = await transactions.data.data;\r\n\r\n    dispatch({\r\n      type: GET_ALL_TRANSACTIONS,\r\n      payload: transactions,\r\n    });\r\n\r\n  } catch (error) {\r\n    let err\r\n    console.log({ err: error.response });    \r\n    if (error.response) {\r\n      err = error.response.data.error;\r\n    } else {\r\n      err = \"Something went wrong. Try Again\";\r\n    }\r\n    dispatch({\r\n      type: GET_ALL_TRANSACTIONS,\r\n      payload: [],\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Input, Alert } from \"rsuite\";\r\nimport Select from \"react-select\";\r\nimport \"rsuite/dist/styles/rsuite-default.css\";\r\n\r\nimport {\r\n    ProfileUpdate,\r\n    clearAuthErrorAction,\r\n} from \"./../../store/actions/Auth\";\r\n\r\nimport { MakePayment } from \"./../../store/actions/Transaction\";\r\n\r\nimport Spinner from \"react-loader-spinner\";\r\n\r\nlet months = require(\"./months.json\");\r\n\r\nlet CurrencyFormat = require(\"react-currency-format\");\r\n\r\nexport class Option extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            accommodation_status: \"\",\r\n            rent_amount: \"\",\r\n            income: \"\",\r\n            stage: 1,\r\n            ...this.props.userData,\r\n            payment_duration: {\r\n                label: this.props.userData\r\n                    ? `${this.props.userData.payment_duration} Month`\r\n                    : \"1 Month\",\r\n                value: this.props.userData\r\n                    ? `${this.props.userData.payment_duration} Months`\r\n                    : \"1 Months\",\r\n            },\r\n        };\r\n        this.handlePayment = this.handlePayment.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.clearAuthErrorAction();\r\n    }\r\n    componentDidUpdate(pros) {\r\n        if (this.props.authError !== pros.authError)\r\n            if (this.props.authError) {\r\n                Alert.warning(this.props.authError);\r\n                this.props.clearAuthErrorAction();\r\n            }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    handlePayment() {\r\n        let { accommodation_status, income, rent_amount, payment_duration } =\r\n            this.state;\r\n        if (accommodation_status && income && rent_amount && payment_duration) {\r\n            this.props.MakePayment(\r\n                {\r\n                    accommodation_status,\r\n                    income,\r\n                    rent_amount: Number(this.state.rent_amount) * 0.02,\r\n                    first_payment: Number(\r\n                        Number(\r\n                            this.state.rent_amount /\r\n                                parseInt(this.state.payment_duration.value)\r\n                        ) +\r\n                            Number(this.state.rent_amount) * 0.02\r\n                    ).toFixed(2),\r\n                    payment_duration: parseInt(payment_duration.value),\r\n                },\r\n\r\n                () =>\r\n                    this.props.ProfileUpdate(\r\n                        {\r\n                            accommodation_status,\r\n                            income,\r\n                            rent_amount,\r\n                            payment_duration: parseInt(payment_duration.value),\r\n                        },\r\n                        () => {\r\n                            this.setState({\r\n                                stage: \"3\",\r\n                            });\r\n                            this.props.changeThird();\r\n                        }\r\n                    )\r\n            );\r\n        } else {\r\n            Alert.warning(\"Please all fields.\", 5000);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"headout opacy\">\r\n                    {this.state.stage === 1 && (\r\n                        <div className=\"'opacy\">\r\n                            <div className=\"rent_option \">\r\n                                <div className=\"Op_head\">\r\n                                    What's your accommodation status?\r\n                                </div>\r\n                                <Button\r\n                                    appearance=\"subtle\"\r\n                                    className={`z-depth-0 text-center mt-2 butas  ${\r\n                                        this.state.accommodation_status ===\r\n                                            \"Looking to renew my rent\" &&\r\n                                        \"bubuta\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            accommodation_status:\r\n                                                \"Looking to renew my rent\",\r\n                                        });\r\n                                    }}\r\n                                    ripple={true}\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        borderRadius: \"6px\",\r\n                                        borderWidth: 2,\r\n                                    }}\r\n                                >\r\n                                    <span className=\"op_button \">\r\n                                        Looking to renew my rent\r\n                                    </span>\r\n                                </Button>\r\n                                <Button\r\n                                    className={`z-depth-0 text-center mt-2 butas  ${\r\n                                        this.state.accommodation_status ===\r\n                                            \"Want to pay for a new place\" &&\r\n                                        \"bubuta\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            accommodation_status:\r\n                                                \"Want to pay for a new place\",\r\n                                        });\r\n                                    }}\r\n                                    appearance=\"subtle\"\r\n                                    ripple={true}\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        borderRadius: \"6px\",\r\n                                        borderWidth: 2,\r\n                                    }}\r\n                                >\r\n                                    <span className=\"op_button \">\r\n                                        Want to pay for a new place\r\n                                    </span>\r\n                                </Button>\r\n                                <Button\r\n                                    appearance=\"subtle\"\r\n                                    className={`z-depth-0 text-center mt-2 butas mb-3  ${\r\n                                        this.state.accommodation_status ===\r\n                                            \"I'm still searching\" && \"bubuta\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            accommodation_status:\r\n                                                \"I'm still searching\",\r\n                                        });\r\n                                    }}\r\n                                    ripple={true}\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        borderRadius: \"6px\",\r\n                                        borderWidth: 2,\r\n                                    }}\r\n                                >\r\n                                    <span className=\"op_button \">\r\n                                        I'm still searching\r\n                                    </span>\r\n                                </Button>\r\n                            </div>\r\n\r\n                            <div className=\"rent_opion for_input \">\r\n                                <div className=\"Op_head\">\r\n                                    How much is your rent request amount?\r\n                                </div>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    size=\"md\"\r\n                                    className=\"optional_input\"\r\n                                    placeholder=\"Amount\"\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            rent_amount: e,\r\n                                        });\r\n                                    }}\r\n                                    id={\"rent_amount\"}\r\n                                    value={this.state.rent_amount}\r\n                                    defaultValue={this.state.rent_amount}\r\n                                />\r\n                            </div>\r\n                            <div className=\"rent_opion for_input\">\r\n                                <div className=\"Op_head\">\r\n                                    How much did you earn monthly ?\r\n                                </div>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    size=\"md\"\r\n                                    className=\"optional_input\"\r\n                                    placeholder=\"Amount\"\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            income: e,\r\n                                        });\r\n                                    }}\r\n                                    id={\"income\"}\r\n                                    value={this.state.income}\r\n                                    defaultValue={this.state.income}\r\n                                />\r\n                            </div>\r\n                            <div className=\"rent_opion for_input\">\r\n                                <div className=\"Op_head\">\r\n                                    Choose a monthly plan ?\r\n                                </div>\r\n                            </div>\r\n                            <Select\r\n                                className=\"optional\"\r\n                                options={months}\r\n                                placeholder=\"Choose plan\"\r\n                                onChange={(e) => {\r\n                                    console.log({ e });\r\n                                    this.setState({\r\n                                        payment_duration: e,\r\n                                    });\r\n                                }}\r\n                                name={\"payment_duration\"}\r\n                                value={this.state.payment_duration}\r\n                                defaultValue={this.state.payment_duration}\r\n                                style={{\r\n                                    border: \"1px solid\",\r\n                                    fontSize: \"13px\",\r\n                                }}\r\n                            />\r\n\r\n                            <Button\r\n                                className={`balm text-center mt-4 butas bg-success`}\r\n                                onClick={() => {\r\n                                    let {\r\n                                        accommodation_status,\r\n                                        income,\r\n                                        rent_amount,\r\n                                        payment_duration,\r\n                                    } = this.state;\r\n                                    console.log({\r\n                                        accommodation_status,\r\n                                        income,\r\n                                        rent_amount,\r\n                                        payment_duration,\r\n                                    });\r\n                                    if (\r\n                                        accommodation_status &&\r\n                                        income &&\r\n                                        rent_amount &&\r\n                                        payment_duration\r\n                                    ) {\r\n                                        this.setState({\r\n                                            stage: \"2\",\r\n                                        });\r\n                                        this.props.changeSecond();\r\n                                    } else {\r\n                                        Alert.warning(\r\n                                            \"Please all fields.\",\r\n                                            5000\r\n                                        );\r\n                                    }\r\n                                }}\r\n                                appearance=\"subtle\"\r\n                                ripple={true}\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    borderRadius: \"6px\",\r\n                                    borderWidth: 2,\r\n                                }}\r\n                            >\r\n                                <span\r\n                                    style={{ fontVariant: \"small-caps\" }}\r\n                                    className=\"text-white op_button_next small\"\r\n                                >\r\n                                    Next\r\n                                </span>\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                    {this.state.stage === \"2\" && (\r\n                        <div className=\"opacy\">\r\n                            <div>\r\n                                <div className=\"rent_opion for_input \">\r\n                                    <div className=\"Op_head\">\r\n                                        Rent request amount\r\n                                    </div>\r\n                                    <Input\r\n                                        size=\"md\"\r\n                                        className=\"optional_input z-depth-1\"\r\n                                        placeholder=\"Amount\"\r\n                                        type={\"number\"}\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                rent_amount: e,\r\n                                            });\r\n                                        }}\r\n                                        id={\"rent_amount\"}\r\n                                        value={this.state.rent_amount}\r\n                                        defaultValue={this.state.rent_amount}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mt-4\" />\r\n\r\n                                <div className=\"rent_opion for_input mt-3\">\r\n                                    <div className=\"Op_head\">\r\n                                        Monthly payment plan\r\n                                    </div>\r\n                                </div>\r\n                                <Select\r\n                                    className=\"optional\"\r\n                                    style={{\r\n                                        border: \"1px solid\",\r\n                                        fontSize: \"13px\",\r\n                                    }}\r\n                                    options={months}\r\n                                    placeholder=\"Choose plan\"\r\n                                    onChange={(e) => {\r\n                                        console.log({ e });\r\n                                        this.setState({\r\n                                            payment_duration: e,\r\n                                        });\r\n                                    }}\r\n                                    name={\"payment_duration\"}\r\n                                    value={this.state.payment_duration}\r\n                                    defaultValue={this.state.payment_duration}\r\n                                />\r\n                                <div className=\"mt-4\" />\r\n                                <div className=\"rent_opion for_input mt-3\">\r\n                                    <div className=\"Op_head\">\r\n                                        Payment option\r\n                                    </div>\r\n\r\n                                    <div className=\"the_options border\">\r\n                                        <div className=\"the_options_1 border-bottom flex heart\">\r\n                                            <div className=\"pre_title\">\r\n                                                Pre-approved amount:\r\n                                            </div>\r\n                                            <div className=\"pre_amount ml-auto\">\r\n                                                <CurrencyFormat\r\n                                                    value={\r\n                                                        this.state.rent_amount\r\n                                                    }\r\n                                                    displayType={\"text\"}\r\n                                                    thousandSeparator={true}\r\n                                                    prefix={\"₦\"}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"the_options_1 border-bottom flex heart\">\r\n                                            <div className=\"pre_title\">\r\n                                                Monthly payment:\r\n                                            </div>\r\n                                            <div className=\"pre_amount ml-auto\">\r\n                                                <CurrencyFormat\r\n                                                    value={Number(\r\n                                                        Number(\r\n                                                            this.state\r\n                                                                .rent_amount /\r\n                                                                parseInt(\r\n                                                                    this.state\r\n                                                                        .payment_duration\r\n                                                                        .value\r\n                                                                )\r\n                                                        ) +\r\n                                                            Number(\r\n                                                                this.state\r\n                                                                    .rent_amount\r\n                                                            ) *\r\n                                                                0.02\r\n                                                    ).toFixed(2)}\r\n                                                    displayType={\"text\"}\r\n                                                    thousandSeparator={true}\r\n                                                    prefix={\"₦\"}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"the_options_1  flex heart\">\r\n                                            <div className=\"pre_title\">\r\n                                                Tenor:\r\n                                            </div>\r\n                                            <div className=\"pre_amount ml-auto\">\r\n                                                {\r\n                                                    this.state.payment_duration\r\n                                                        .value\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {this.props.authLoading ? (\r\n                                    <Button\r\n                                        disabled\r\n                                        className={`balm w-100 heart text-center mt-2 butas bg-success`}\r\n                                    >\r\n                                        <Spinner\r\n                                            width=\"24\"\r\n                                            className=\"mx-auto\"\r\n                                            height=\"24\"\r\n                                            color=\"white\"\r\n                                            type=\"ThreeDots\"\r\n                                        />\r\n                                    </Button>\r\n                                ) : (\r\n                                    <Button\r\n                                        className={`balm text-center mt-4 butas saa bg-success`}\r\n                                        onClick={this.handlePayment}\r\n                                        appearance=\"subtle\"\r\n                                        ripple={true}\r\n                                        style={{\r\n                                            width: \"100%\",\r\n                                            borderRadius: \"6px\",\r\n                                            borderWidth: 2,\r\n                                        }}\r\n                                    >\r\n                                        <span\r\n                                            style={{\r\n                                                fontVariant: \"small-caps\",\r\n                                            }}\r\n                                            className=\"text-white op_button_next small\"\r\n                                        >\r\n                                            Make 1st Month Payment\r\n                                        </span>\r\n                                    </Button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userData: state.user.user,\r\n    authLoading: state.user.isLoading,\r\n    authError: state.user.errorMsg,\r\n});\r\n\r\nconst mapDispatchToProps = { ProfileUpdate, MakePayment, clearAuthErrorAction };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Option);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Option from \"./Option\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nexport class Rent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      postion: 1,\r\n      postionTitle: \"Payment Option\",\r\n    };\r\n    this.changeSecond = this.changeSecond.bind(this);\r\n    this.changeThird = this.changeThird.bind(this);\r\n  }\r\n  changeSecond() {\r\n    this.setState({ postion: 2, postionTitle: \"Payment \" });\r\n  }\r\n  changeThird() {\r\n    this.setState({ postion: 3, postionTitle: \"Application Completed\" });\r\n  }\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\" rent\">\r\n        <div className=\"rent_stages  flex\">\r\n          <div className=\"rent_title\">{this.state.postionTitle}</div>\r\n          <div className=\"rent_ratio  heart flex ml-auto\">\r\n            <div className=\"ratio_num\">{this.state.postion} of 3</div>\r\n            <div className=\"ratio_circle  p-1 ml-auto\">\r\n              <div style={{ width: 38, height: 38 }}>\r\n                <CircularProgressbar\r\n                  value={this.state.postion / 3}\r\n                  maxValue={1}\r\n                  strokeWidth={24}\r\n                  styles={buildStyles({\r\n                    rotation: 0.95,\r\n\r\n                    textSize: \"0px\",\r\n\r\n                    pathTransitionDuration: 1,\r\n\r\n                    pathColor: `#6cd36cd0`,\r\n                    trailColor: \"#d6d6d6\",\r\n                    backgroundColor: \"green\",\r\n                  })}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"rent_content\">\r\n          <Option\r\n            changeSecond={this.changeSecond}\r\n            changeThird={this.changeThird}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rent);\r\n","import { faker } from '@faker-js/faker/locale/en';\r\nexport function mockUsers(length) {\r\n  const createRowData = rowIndex => {\r\n    const firstName = faker.name.firstName();\r\n    const lastName = faker.name.lastName();\r\n    const gender = faker.name.gender(true);\r\n    const name = faker.name.findName(firstName, lastName, gender);\r\n    const avatar = faker.image.avatar();\r\n\r\n    const city = faker.address.city();\r\n    const street = faker.address.street();\r\n    const email = faker.internet.email();\r\n    const postcode = faker.address.zipCode();\r\n    const phone = faker.phone.number();\r\n    const amount = faker.finance.amount(1000, 90000);\r\n\r\n    const age = Math.floor(Math.random() * 30) + 18;\r\n    const stars = Math.floor(Math.random() * 10000);\r\n    const followers = Math.floor(Math.random() * 10000);\r\n    const rating = 2 + Math.floor(Math.random() * 3);\r\n    const progress = Math.floor(Math.random() * 100);\r\n\r\n    return {\r\n      id: rowIndex + 1,\r\n      name,\r\n      firstName,\r\n      lastName,\r\n      avatar,\r\n      city,\r\n      street,\r\n      postcode,\r\n      email,\r\n      phone,\r\n      gender,\r\n      age,\r\n      stars,\r\n      followers,\r\n      rating,\r\n      progress,\r\n      amount\r\n    };\r\n  };\r\n\r\n  return Array.from({ length }).map((_, index) => {\r\n    return createRowData(index);\r\n  });\r\n}\r\n\r\nexport function mockTreeData(options){\r\n  const { limits, labels, getRowData } = options;\r\n  const depth = limits.length;\r\n\r\n  const data = [];\r\n  const mock = (list, parentValue, layer = 0) => {\r\n    const length = limits[layer];\r\n    Array.from({ length }).forEach((_, index) => {\r\n      const value = parentValue ? parentValue + '-' + (index + 1) : index + 1 + '';\r\n      const children = [];\r\n      const label = Array.isArray(labels) ? labels[layer] : labels;\r\n      let row = {\r\n        label: typeof label === 'function' ? label(layer, value, faker) : label + ' ' + value,\r\n        value\r\n      };\r\n\r\n      if (getRowData) {\r\n        row = {\r\n          ...row,\r\n          ...getRowData(layer, value)\r\n        };\r\n      }\r\n\r\n      list.push(row);\r\n\r\n      if (layer < depth - 1) {\r\n        row.children = children;\r\n        mock(children, value, layer + 1);\r\n      }\r\n    });\r\n  };\r\n\r\n  mock(data);\r\n\r\n  return data;\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Button } from \"rsuite\";\r\nimport { GetAllTransactions } from \"../store/actions/Transaction\";\r\nimport Spinner from \"react-loader-spinner\";\r\nimport { mockUsers } from \"./../store/mock\";\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\nconst data = mockUsers(20);\r\n\r\nconsole.log({ data });\r\n\r\nexport class Transaction extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.GetAllTransactions();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\" \"}\r\n                {this.props.transactions &&\r\n                this.props.transactions.length > 0 ? (\r\n                    <Table\r\n                        height={400}\r\n                        data={this.props.transactions}\r\n                        onRowClick={(rowData) => {\r\n                            console.log(rowData);\r\n                        }}\r\n                    >\r\n                        <Column width={150}>\r\n                            <HeaderCell> Name</HeaderCell>\r\n                            <Cell dataKey=\"name\" />\r\n                        </Column>\r\n\r\n                        <Column width={100}>\r\n                            <HeaderCell>Amount</HeaderCell>\r\n                            <Cell dataKey=\"amount\" />\r\n                        </Column>\r\n\r\n                        <Column width={280}>\r\n                            <HeaderCell>Email</HeaderCell>\r\n                            <Cell dataKey=\"email\" />\r\n                        </Column>\r\n                        <Column width={100}>\r\n                            <HeaderCell>Method</HeaderCell>\r\n                            <Cell dataKey=\"method\" />\r\n                        </Column>\r\n                        <Column width={300}>\r\n                            <HeaderCell>Paid At</HeaderCell>\r\n                            <Cell dataKey=\"paidAt\" />\r\n                        </Column>\r\n                    </Table>\r\n                ) : (\r\n                    <div className=\"p-4\">\r\n                        <Spinner\r\n                            width=\"24\"\r\n                            className=\"mx-auto\"\r\n                            height=\"24\"\r\n                            color=\"white\"\r\n                            type=\"ThreeDots\"\r\n                        />\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    transactions: state.transactions.transactions,\r\n    authLoading: state.user.isLoading,\r\n    authError: state.user.errorMsg,\r\n});\r\n\r\nconst mapDispatchToProps = { GetAllTransactions };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transaction);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Auth from \"./components/Auth\";\r\nimport Rent from \"./components/Rent\";\r\nimport { Button } from \"rsuite\";\r\nimport { LogoutAction } from \"./store/actions/Auth\";\r\nimport Transaction from \"./components/Transaction\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show_transactions: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let { isAuthenticated } = this.props;\r\n        return (\r\n            <Router>\r\n                <div className=\"first-container\">\r\n                    <div className=\" z-depth-1 px-2\">\r\n                        <div>\r\n                            {isAuthenticated && (\r\n                                <div\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        flexDirection: \"row\",\r\n                                        justifyContent: \"space-between\",\r\n                                    }}\r\n                                >\r\n                                    <Button\r\n                                        size={\"sm\"}\r\n                                        className={\r\n                                            \"border z-depth-0 my-2 white border\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                show_transactions: false,\r\n                                            });\r\n                                            this.props.LogoutAction();\r\n                                        }}\r\n                                    >\r\n                                        <small className=\"small \">\r\n                                            SIGNOUT\r\n                                        </small>\r\n                                    </Button>\r\n                                    <Button\r\n                                        size={\"sm\"}\r\n                                        className={\r\n                                            \"border ml-2 z-depth-0 my-2 white border\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                show_transactions: false,\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        <small className=\"small \">RENT</small>\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                        size={\"sm\"}\r\n                                        className={\r\n                                            \"ml-auto border z-depth-0 my-2 white border\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                show_transactions: true,\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        <small className=\"small\">\r\n                                            TRANSACTIONS\r\n                                        </small>\r\n                                    </Button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"app mx-auto border-left border-right z-depth-1 m-auto w-fit p-4 my-auto\">\r\n                            {isAuthenticated ? (\r\n                                <>\r\n                                    {!this.state.show_transactions ? (\r\n                                        <>\r\n                                            <div className=\"app_title locop\">\r\n                                                My Rent\r\n                                            </div>\r\n                                            <Rent />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <div className=\"app_title locop\">\r\n                                                My Transactions\r\n                                            </div>\r\n                                            <Transaction />\r\n                                        </>\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <div className=\"app_title welcome_class text-center\">\r\n                                        Welcome\r\n                                    </div>\r\n                                    <Auth />\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.user.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { LogoutAction })(App);\r\n","import { AUTH_TOKEN } from \"../apis/base\";\r\nimport {\r\n  AUTH_ERROR,\r\n  AUTHENTICATED,\r\n  AUTH_LOADING,\r\n  LOGOUT,\r\n  USER_LOADED,\r\n  CLEAR_AUTH_ERROR,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  user: {},\r\n  errorMsg: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n    case CLEAR_AUTH_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case AUTHENTICATED:\r\n      localStorage.setItem(AUTH_TOKEN, action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.user,\r\n      };\r\n\r\n    case AUTH_ERROR:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        token: null,\r\n        user: {},\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_ALL_TRANSACTIONS\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  transactions: [{}]\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_TRANSACTIONS:\r\n      return {\r\n        ...state,\r\n        transactions: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport user from \"./ProfileReducer\";\r\nimport transactions from \"./TransactionReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"user\"],\r\n};\r\n\r\nconst combine = combineReducers({\r\n  user,\r\n  transactions\r\n});\r\n\r\nexport default persistReducer(persistConfig, combine);\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootRuducer from './reducers'\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    rootRuducer,\r\n    compose(\r\n      applyMiddleware(thunk)\r\n      // , typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  )\r\n  const persistor = persistStore(store)\r\n  return { store, persistor }\r\n}\r\n\r\nexport default configureStore();\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./app\";\r\nimport \"./assets/styles/index.scss\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport stor from \"./store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst { store, persistor } = stor;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}